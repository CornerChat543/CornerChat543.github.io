<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>C# &#8211; CornerChat543</title>
	<atom:link href="https://cornerchat543.github.io/tag/c/feed/" rel="self" type="application/rss+xml" />
	<link>https://cornerchat543.github.io</link>
	<description></description>
	<lastBuildDate>Sun, 05 May 2024 07:00:09 +0000</lastBuildDate>
	<language>zh-TW</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.2</generator>

<image>
	<url>https://cornerchat543.github.io/wp-content/uploads/2024/05/Logo_v2.jpg</url>
	<title>C# &#8211; CornerChat543</title>
	<link>https://cornerchat543.github.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>使用ToolKit.MVVM實現ViewModel &#8211; Part 1</title>
		<link>https://cornerchat543.github.io/2024/05/toolkit-mvvm-part01/</link>
		
		<dc:creator><![CDATA[cornerchat543]]></dc:creator>
		<pubDate>Sun, 05 May 2024 06:54:39 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[.NET]]></category>
		<category><![CDATA[MVVM]]></category>
		<category><![CDATA[Nuget]]></category>
		<category><![CDATA[ToolKit.MVVM]]></category>
		<category><![CDATA[WPF]]></category>
		<guid isPermaLink="false">https://cornerchat543.github.io/?p=154</guid>

					<description><![CDATA[在WPF開發中(或其他Windows框架)，若要實現MVVM架構的話，通常需要實作 INotifyProper [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/dNjQeay.png" alt="CommunityToolKit.Mvvm文章封面圖"/></figure>



<p>在WPF開發中(或其他Windows框架)，若要實現MVVM架構的話，通常需要實作 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.4))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanged</mark>、<mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.4))" class="has-inline-color has-palette-color-8-color">ICommand</mark>，這兩個 interface 。自己先前的習慣是，從網路上找其他人寫好的實作，複製到自己的專案中使用，且每開一次新專案，就複製一份。</p>



<p>某天如往常地尋找資料時，發現了微軟在 Nuget 上的 CommunityToolkit.Mvvm 套件(也稱為MVVM工具包)。該套件不但實作了MVVM所需要的物件，還提供一些好用的 Attribute ，讓程式碼可以更精簡，從而讓開發人員更專注在重要的程式邏輯中。</p>



<p>關於 CommunityToolkit.Mvvm 套件使用方法，預計拆分成幾篇不同主題的文章，而本次將記錄，在未使用此套件之前的做法，接著套件的安裝方法、基本使用，以及如何使用其提供的 Attribute 功能。</p>



<p>開發環境，如下</p>



<ul>
<li>IDE : Visual Studio 2022</li>



<li>.NET版本 : . NET 6.0</li>
</ul>



<hr class="wp-block-separator has-alpha-channel-opacity is-style-wide"/>



<h2 class="wp-block-heading article_h2">以往的開發狀況</h2>



<p>有比較才有傷害，首先回顧尚未使用套件前，以往撰寫所用的類別與狀況。</p>



<p>View 的 XAML 部分如下，本篇文章的範例，View 都是用同一個，後面則是根據 ViewModel 的不同，替換 DataContext 中的 ViewModel 即可。</p>



<p>此 View 分為兩個部分，</p>



<p>第一部分為兩個 TextBox 搭配一個 Button 組成，預計按下 Button 後顯示 MessageBox。</p>



<p>第二部分為一個 TextBox 配上一個 Button ，不同之處在於預計點擊 Button 後，會傳送 CommandParameter，再顯示 MessageBox。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-1 wp-block-group-is-layout-flex">
<p>XAML</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">XML</span><span role="button" tabindex="0" data-code="&lt;Window.Resources&gt;
    &lt;Thickness x:Key=&quot;Margin.Top&quot;&gt;0,10,0,0&lt;/Thickness&gt;
&lt;/Window.Resources&gt;

&lt;Window.DataContext&gt;
    &lt;local:MainWindowViewModel/&gt;
&lt;/Window.DataContext&gt;

&lt;Grid&gt;

    &lt;StackPanel Margin=&quot;20&quot;&gt;

        &lt;!--Name--&gt;
        &lt;TextBlock Text=&quot;Name:&quot;/&gt;
        &lt;TextBox Text=&quot;{Binding Path=Name,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;

        &lt;!--Phone--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Phone:&quot;/&gt;
        &lt;TextBox Text=&quot;{Binding Path=Phone,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;

        &lt;Button Margin=&quot;{StaticResource Margin.Top}&quot;
                Content=&quot;Show Info&quot;
                Command=&quot;{Binding Path=ShowInfoCommand}&quot;/&gt;

        &lt;!--Note--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Note:&quot;/&gt;
        &lt;TextBox x:Name=&quot;tbNote&quot;/&gt;

        &lt;Button Margin=&quot;{StaticResource Margin.Top}&quot;
                Content=&quot;Show Note&quot;
                Command=&quot;{Binding Path=ShowNoteCommand}&quot;
                CommandParameter=&quot;{Binding ElementName=tbNote, Path=Text}&quot;/&gt;

    &lt;/StackPanel&gt;

&lt;/Grid&gt;" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Window.Resources</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Thickness</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">x</span><span style="color: #89DDFF">:</span><span style="color: #C792EA">Key</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Margin.Top</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">0,10,0,0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Thickness</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Window.Resources</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Window.DataContext</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">local</span><span style="color: #89DDFF">:</span><span style="color: #F07178">MainWindowViewModel</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Window.DataContext</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Grid</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">20</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Name--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Name:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Name,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Phone--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Phone:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Phone,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Show Info</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Command</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=ShowInfoCommand}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Note--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Note:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">x</span><span style="color: #89DDFF">:</span><span style="color: #C792EA">Name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tbNote</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Show Note</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Command</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=ShowNoteCommand}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">CommandParameter</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding ElementName=tbNote, Path=Text}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Grid</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div>
</div>



<p>View 執行起來，如下圖。</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-2 wp-block-group-is-layout-flex">
<p>View</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-1"><img decoding="async" src="https://i.imgur.com/OInGGRD.png" alt="範例View執行結果"/></figure>
</div>



<p><mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.4))" class="has-inline-color has-palette-color-8-color"> INotifyPropertyChanged</mark> 的實作 ViewModelBase 程式碼如下。</p>



<p>每個人的實作與使用上多少有點不同<s>(廢話)</s>，這邊則是網路上找到的某個版本。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-3 wp-block-group-is-layout-flex">
<p>ViewModelBase</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace BindingLibrary
{
    public abstract class ViewModelBase : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler? PropertyChanged;

        protected virtual void OnPropertyChanged(string? propertyName)
        {
            PropertyChanged?.Invoke(
                this, new PropertyChangedEventArgs(propertyName));
        }

        protected bool SetProperty&lt;T&gt;(
            ref T field,
            T value,
            [CallerMemberName] string? propertyName = null)
        {
            if (EqualityComparer&lt;T&gt;.Default.Equals(field, value))
            {
                return false;
            }

            field = value;
            OnPropertyChanged(propertyName);

            return true;
        }
    }
}
" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> System</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">ComponentModel</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> System</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Runtime</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">CompilerServices</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">namespace</span><span style="color: #BABED8"> BindingLibrary</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">abstract</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ViewModelBase</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">INotifyPropertyChanged</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">event</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">PropertyChangedEventHandler</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">PropertyChanged</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">protected</span><span style="color: #BABED8"> </span><span style="color: #C792EA">virtual</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">OnPropertyChanged</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">propertyName</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            PropertyChanged</span><span style="color: #89DDFF">?.</span><span style="color: #82AAFF">Invoke</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF">this,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">PropertyChangedEventArgs</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">propertyName</span><span style="color: #89DDFF">));</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">protected</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">T</span><span style="color: #89DDFF">&gt;(</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">T</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">field</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #FFCB6B">T</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">CallerMemberName</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">propertyName</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">null)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #BABED8">EqualityComparer</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">T</span><span style="color: #89DDFF">&gt;.</span><span style="color: #BABED8">Default</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Equals</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">field</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">            field </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #82AAFF">OnPropertyChanged</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">propertyName</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre></div>
</div>



<p>再來是 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.4))" class="has-inline-color has-palette-color-8-color">ICommand</mark> 的實作 RelayCommand 程式碼如下。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-4 wp-block-group-is-layout-flex">
<p>RelayCommand</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="using System.Windows.Input;

namespace BindingLibrary
{
    public class RelayCommand : ICommand
    {
        private readonly Action&lt;object?&gt; _execute;
        private readonly Predicate&lt;object?&gt;? _canExecute;

        public RelayCommand
            (Action&lt;object?&gt; execute,
            Predicate&lt;object?&gt;? canExecute = null)
        {
            _execute = execute ?? 
                throw new ArgumentNullException(nameof(execute));
            _canExecute = canExecute;
        }

        public event EventHandler? CanExecuteChanged;

        public bool CanExecute(object? parameter)
        {
            return _canExecute == null
                || _canExecute(parameter);
        }

        public void Execute(object? parameter)
        {
            _execute(parameter);
        }

        public void RaiseCanExecuteChanged()
        {
            CanExecuteChanged?.Invoke(this, EventArgs.Empty);
        }
    }
}
" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> System</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Windows</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Input</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">namespace</span><span style="color: #BABED8"> BindingLibrary</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">readonly</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Action</span><span style="color: #89DDFF">&lt;object?&gt;</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_execute</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">readonly</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Predicate</span><span style="color: #89DDFF">&lt;object?&gt;?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_canExecute</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> RelayCommand</span></span>
<span class="line"><span style="color: #BABED8">            (</span><span style="color: #FFCB6B">Action</span><span style="color: #89DDFF">&lt;object?&gt;</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">execute</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #FFCB6B">Predicate</span><span style="color: #BABED8">&lt;</span><span style="color: #FFCB6B">object</span><span style="color: #BABED8">?&gt;? </span><span style="color: #FFCB6B">canExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">null</span><span style="color: #BABED8">)</span></span>
<span class="line"><span style="color: #BABED8">        {</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #FFCB6B">_execute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> execute </span><span style="color: #89DDFF">??</span><span style="color: #BABED8"> </span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF; font-style: italic">throw</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ArgumentNullException</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">execute</span><span style="color: #89DDFF">));</span></span>
<span class="line"><span style="color: #BABED8">            _canExecute </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> canExecute</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> event EventHandler? CanExecuteChanged</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> bool CanExecute(object? parameter)</span></span>
<span class="line"><span style="color: #BABED8">        {</span></span>
<span class="line"><span style="color: #BABED8">            return _canExecute == null</span></span>
<span class="line"><span style="color: #BABED8">                || _canExecute(parameter)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">Execute</span><span style="color: #89DDFF">(object?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">parameter</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #82AAFF">_execute</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">parameter</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">RaiseCanExecuteChanged</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            CanExecuteChanged</span><span style="color: #89DDFF">?.</span><span style="color: #82AAFF">Invoke</span><span style="color: #89DDFF">(this,</span><span style="color: #BABED8"> EventArgs</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Empty</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #BABED8">    }</span></span>
<span class="line"><span style="color: #BABED8">}</span></span>
<span class="line"></span></code></pre></div>
</div>



<p>最後是 ViewModel 的程式碼 MainWindowViewModel。</p>



<p>繼承部分，</p>



<ul>
<li>此類別繼承 ViewModelBase。</li>
</ul>



<p>Property 部分，</p>



<ul>
<li>Name，set 時使用 SetProperty 方法外，還會呼叫 RaiseCanExecuteChanged 進行對應的 CanExecute 方法。</li>



<li>Phone，單純使用 SetProperty 方法。</li>
</ul>



<p>Command 部分，</p>



<ul>
<li>ShowInfoCommand，CanExecute 部分呼叫 CanShowInfo() ，檢查 _name 變數是否為 null 或 empty ；Execute 部分呼叫 ShowInfo() ，將 Name 與 Phone 的內容顯示在 MessageBox 中。</li>



<li>ShowNoteCommand，Execute 部分呼叫 ShowNote(object? obj) ，將 View 傳進來的物件，傳成字串並顯示在 MessageBox 中。</li>
</ul>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-5 wp-block-group-is-layout-flex">
<p>MainWindowViewModel</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public class MainWindowViewModel : ViewModelBase
{
    private string? _name;
    public string? Name
    {
        get =&gt; _name;
        set
        {
            SetProperty(ref _name, value);
            ShowInfoCommand.RaiseCanExecuteChanged();
        }
    }

    private string? _phone;
    public string? Phone
    {
        get =&gt; _phone;
        set =&gt; SetProperty(ref _phone, value);
    }

    private RelayCommand? _showInfoCommand;
    public RelayCommand ShowInfoCommand
        =&gt; _showInfoCommand ??= new RelayCommand(
            _ =&gt; ShowInfo(), _ =&gt; CanShowInfo());

    private ICommand? _showNoteCommand;
    public ICommand ShowNoteCommand
        =&gt; _showNoteCommand ??= new RelayCommand(ShowNote);

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    private void ShowNote(object? obj)
    {
        string? str = (string?)obj;
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ViewModelBase</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Name</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">            ShowInfoCommand</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">RaiseCanExecuteChanged</span><span style="color: #89DDFF">();</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Phone</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_showInfoCommand</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ShowInfoCommand</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _showInfoCommand </span><span style="color: #89DDFF">??=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #FFCB6B">_</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">(),</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_showNoteCommand</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ShowNoteCommand</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _showNoteCommand </span><span style="color: #89DDFF">??=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">ShowNote</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(object?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">obj</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?)</span><span style="color: #BABED8">obj</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>整體程式執行結果，如下，</p>



<p>在輸入 Name 前，Show Info 按鈕為 Disable 狀態，輸入文字後則變為 Enable 狀態，按下 Show Info 按鈕後，出現 MessageBox 並顯示所 Binding 的內容。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-6 wp-block-group-is-layout-flex">
<p>執行結果1</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-2"><img decoding="async" src="https://i.imgur.com/z1SbLGL.jpeg" alt="範例程式執行結果1"/></figure>
</div>



<p>輸入 Note 後，按下 Show Note 按鈕，View 會將內容文字經由 CommandParameter 傳到 ViewModel 中，最後由 MessageBox 顯示其內容。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-7 wp-block-group-is-layout-flex">
<p>執行結果2</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-3"><img decoding="async" src="https://i.imgur.com/ic2pyqS.png" alt="範例程式執行結果2"/></figure>
</div>



<p>到這裡，示範了如何在 View 與 ViewModel DataBinding 時，實作基礎介面與使用方式，相信有寫過C# MVVM架構的人，是會感到很熟悉的。</p>



<p>那麼，接下來將會把上面的範例程式，改成使用套件的情況。</p>



<h2 class="wp-block-heading article_h2">開始使用ToolKit.MVVM</h2>



<p>開始使用前，需要進行套件的安裝。</p>



<p>打開專案後，在該專案下找到&#8221;相依性&#8221;，並在該項目上按右鍵，選擇選單中的 &#8220;管理NuGet套件&#8221; ，切換到&#8221;瀏覽&#8221;的頁籤中，在搜尋框中輸入 &#8220;ToolKit.Mvvm&#8221;。</p>



<p>在搜尋結果列表中，選擇 &#8220;CommunityToolkit.Mvvm&#8221; 進行安裝。</p>



<p>另外列表中會看到 Microsoft.Toolkit.Mvvm 的套件，該套件是較早期的版本而 CommunityToolkit.Mvvm 則是其最新的版本。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-8 wp-block-group-is-layout-flex">
<p>Nuget 搜尋結果</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-4"><img decoding="async" src="https://i.imgur.com/lqeaStK.jpeg" alt="Nuget搜尋CommunityToolKit.Mvvm套件的搜尋結果"/></figure>
</div>



<p>套件安裝完成後，接下來使用套件內的類別來完成 ViewModel，這邊我建立新的 ViewModel，並且將前一個 ViewModel 複製過來做程式碼的修改。</p>



<p>using 下面這兩個 Namespace，當然也可以輸入對應的類別，在IDE上設定引用。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-9 wp-block-group-is-layout-flex">
<p>Namespace部分</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(1 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> CommunityToolkit</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Mvvm</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">ComponentModel</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> CommunityToolkit</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Mvvm</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Input</span><span style="color: #89DDFF">;</span></span></code></pre></div>
</div>



<p>ViewModel 的程式碼如下，來說明有修改的地方</p>



<p>繼承部分，</p>



<ul>
<li>繼承 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark>，該類別實作了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanged</mark> 和  <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanging</mark>。</li>
</ul>



<p>Property 部分，</p>



<ul>
<li>基本上是一模一樣，唯一不同的地方是，Name 屬性的 set 方法中，原本呼叫 CanExecute 方法，在該套件下方法名是 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">NotifyCanExecuteChanged()</mark>。</li>
</ul>



<p>Command 部分，</p>



<ul>
<li>Command 在使用上，也是差不多的，類別也是叫 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand</mark> </li>



<li>套件內有分 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand</mark> 與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand&lt;T&gt;</mark> ，以前自己用的是 RelayCommand 算是兩種的混合，固定參數都是 object 型態，不使用時用 lamda 捨棄，要使用時從 object 來轉型，那既然套件內有做區分，使用對應的類別即可。</li>
</ul>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-10 wp-block-group-is-layout-flex">
<p>MainWindowViewModel01</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public class MainWindowViewModel01 : ObservableObject
{
    private string? _name;
    public string? Name
    {
        get =&gt; _name;
        set
        {
            SetProperty(ref _name, value);
            ShowInfoCommand.NotifyCanExecuteChanged();
        }
    }

    private string? _phone;
    public string? Phone
    {
        get =&gt; _phone;
        set =&gt; SetProperty(ref _phone, value);
    }

    private RelayCommand? _showInfoCommand;
    public RelayCommand ShowInfoCommand
        =&gt; _showInfoCommand ??= new RelayCommand(ShowInfo, CanShowInfo);

    private ICommand? _showNoteCommand;
    public ICommand ShowNoteCommand
        =&gt; _showNoteCommand ??= new RelayCommand&lt;string&gt;(ShowNote);

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    private void ShowNote(string? str)
    {
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel01</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableObject</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Name</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">            ShowInfoCommand</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">NotifyCanExecuteChanged</span><span style="color: #89DDFF">();</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Phone</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_showInfoCommand</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ShowInfoCommand</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _showInfoCommand </span><span style="color: #89DDFF">??=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">ShowInfo</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> CanShowInfo</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_showNoteCommand</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ShowNoteCommand</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _showNoteCommand </span><span style="color: #89DDFF">??=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">&lt;</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">&gt;(</span><span style="color: #BABED8">ShowNote</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>替換成套件中的類別，程式碼不要說87%像，根本一模一樣啊?</p>



<p>這樣有什麼特別的嗎?</p>



<p>ToolKit.Mvvm 還提供的一些 Attribute 供使用，接下來看看此部分。</p>



<p><s>那麼，接下來就來看看，讓程式碼變短的魔法!</s></p>



<h2 class="wp-block-heading article_h2">使用套件提供的Attribute</h2>



<p>ViewModel 全部改用 Attribute 後的程式碼如下。</p>



<p>程式碼少將近一半，留下最主要的邏輯部分，並且還完全等同於上一段的程式碼，接下來將逐步解析程式碼，以便更好地理解其邏輯並正確的使用。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-11 wp-block-group-is-layout-flex">
<p>MainWindowViewModel02</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class MainWindowViewModel02 : ObservableObject
{
    [ObservableProperty]
    [NotifyCanExecuteChangedFor(nameof(ShowInfoCommand))]
    private string? _name;

    [ObservableProperty]
    private string? _phone;

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    [RelayCommand(CanExecute = nameof(CanShowInfo))]
    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    [RelayCommand]
    private void ShowNote(string? str)
    {
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel02</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableObject</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyCanExecuteChangedFor</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">ShowInfoCommand</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>首先，要使用此套件的 Attribute 時，除了要繼承 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 以外，類別前面還需要加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">partial</mark> 關鍵字，這樣加上對應的 Attribute 時，對應的程式碼便會自動產生。忘記加 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">partial</mark> 關鍵字，使用了 Attrubute 也沒關係，IDE會提示的。</p>



<p>※補充：partial 這個關鍵字允許開發者將一個類別、結構、介面或方法的定義分散在兩個或更多的程式碼檔案中。</p>



<p>不過有個先決條件，專案的C#版本需要是C# 8.0以上，才能使用此套件的 Attribute 功能。如果版本不到，IDE便會提示 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">MVVMTK0008</mark> 的錯誤提示。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/truQ3mN.jpeg" alt="類別加入partial關鍵字"/></figure>



<p>再來是 Attribute 的使用。</p>



<p>在撰寫 ViewModel 時，通常會需要綁定一些變數。在大多數情況下，會先撰寫私有變數，然後再寫相應的屬性。這些屬性不僅用於讀寫私有變數，還需要包含通知 View 變動的方法，如下圖中紅底部分。</p>



<p>然而，如果使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute，只需要在私有變數上方加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">[ObservableProperty]</mark> 標註，就完成綁定屬性的撰寫，無需額外撰寫紅底部分的程式碼，如下圖中綠底部分所示。</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-12 wp-block-group-is-layout-flex">
<p>紅底：標準使用</p>



<p>綠底：使用 Attribute</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-5"><img decoding="async" src="https://i.imgur.com/85bHAPG.jpeg" alt="Property改使用ObservableProperty Attribute"/></figure>
</div>



<p>那麼為什麼加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute 就能達成這個效果呢?</p>



<p>此部分可參考文件註解的詳細說明，如下圖。</p>



<p>大致的意思是，在需要的變數前加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute 後，便會自動產生出公開屬性，包含 set 方法中使用 SetProperty。</p>



<p>而屬性的命名，則會自動根據使用的變數名稱來命名，支援小寫、底線、小m開頭。例如變數名稱為 phone、_phone、m_phone 時，自動產生的屬性則會叫做 Phone。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/tUL375f.jpeg" alt="ObservableProperty Attribute使用原理"/></figure>



<p>如果想看自動產生的程式碼，該怎麼做呢?</p>



<p>其中一個方式為，在撰寫的 ViewModel 上，右鍵 &gt; 移至定義 (或按F12)。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/3nvVh2R.jpeg" alt="前往類別定義"/></figure>



<p>如下圖，IDE會顯示所有定義該 ViewModel 的檔案，以圖中的狀況，前三個檔案都是自動產生的，這邊點選第一個檔案。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/5sZDHZE.jpeg" alt="類別宣告列表"/></figure>



<p>進入到該檔案後，如下圖，IDE會提示該檔案為自動產生的。</p>



<p>在內容中便可找到對應的 Property，同時能看到set方法中，還使用很多的方法，至於怎麼使用，後面的章節會在做說明。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/hTdTeTX.jpeg" alt="套件自動產生的Property程式碼"/></figure>



<p>如果在屬性中需要使用 CanExecute 通知方法，除了使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> 的同時，還需要加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">NotifyCanExecuteChangedFor</mark> Attribute。</p>



<p>如下圖所示，紅底的區域的程式碼可以用綠底的兩個 Attribute 取代，並且將要執行通知的 Command 填入 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">NotifyCanExecuteChangedFor</mark> Attribute 的參數中。</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-13 wp-block-group-is-layout-flex">
<p>紅底：標準使用</p>



<p>綠底：使用 Attribute</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-6"><img decoding="async" src="https://i.imgur.com/4PI6R5u.png" alt="Property使用NotifyCanExecuteChangedFor Attribute"/></figure>
</div>



<p>除了 Property 可以使用 Attribute 外，Command 也有方便的 Attribute 可以使用。</p>



<p>使用方法也很簡單，只需要在 Command 呼叫時要執行的方法上面，加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">[RelayCommand]</mark> 標註即可，如下圖，紅底的區域的程式碼，由兩個綠底的中的Attribute取代。</p>



<p>若要使用 CanExecute 方法，則在 RelayCommand 的 Attribute 中設定 CanExecute 的參數指定要使用的方法。</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-14 wp-block-group-is-layout-flex">
<p>紅底：標準使用</p>



<p>綠底：使用 Attribute</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-7"><img decoding="async" src="https://i.imgur.com/mU2ILuw.png" alt="使用RelayCommand Attribute"/></figure>
</div>



<p>套件內雖然有分 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand</mark> 與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand&lt;T&gt;</mark> 兩種類別，不過 Attribute 都是使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand</mark>，自動產生程式碼會根據方法的定義，自動使用對應的類別。</p>



<p>至於自動產生的 Command 命名規則，通常會是方法名加上 &#8220;Command&#8221; 。例如，在範例程式中 ShowInfo 方法上使用，自動產生的 Command 就會命名為 ShowInfoCommand。</p>



<p>上述的詳細資訊，可至自動產生的程式碼檔案中看到，如下圖所示。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/EETmWLX.png" alt="自動產生的RelayCommand程式碼"/></figure>



<p>以上便是範例程式替換成套件內提供的 Attribute 的情況。該範例基本上涵蓋了寫 ViewModel 時較常用到的程式碼。</p>



<p>接下來，將進一步延伸使用 Attribute 的範例，來探索套件內其他功能。</p>



<h2 class="wp-block-heading article_h2">屬性變更時的額外處理</h2>



<p>當ViewModel程式中使用了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute ，但同時又想在Property的set過程中執行一些額外的操作時，該怎麼辦呢?</p>



<p>這時候，可以試著使用自動產生的 partial 方法來處理看看。</p>



<p>當進入到自動產生的 Property 程式碼中，在 set 方法中可以看到中間會有以該屬性名的 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">OnXxxChanging()</mark> 、 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">OnXxxChanged()</mark> 方法。如下圖，像是 Name 屬性便有 OnNameChaging() 、OnNameChaged()，而 Phone 屬性則是有 OnPhoneChaging() 、OnPhoneChaged() 。</p>



<p>那這些方法是怎麼定義的呢?</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/cp3htR8.png" alt="自動產生的Property程式碼"/></figure>



<p>在自動產生的程式碼部分繼續往下拉，可以看到方法的定義。</p>



<p>這些 Changing 、 Changed 方法，都是宣告為 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">partial</mark> ，這樣只要挑選需要的方法，並在 ViewModel 中實作即可。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/TGEAe4M.png" alt="自動產生的partial方法定義"/></figure>



<p>例如，把下面的 partial void OnNameChanged 程式，寫到 ViewMode l中。</p>



<p>這段程式，會在 _name = value 之後，檢查value是否為空，如果是的話，就把 Phone 屬性設為空字串。</p>



<p>基本上，在自動產生的程式碼中確認方法呼叫的時機，並將要實現的方法定義複製到 ViewModel 中，再撰寫需要的程式邏輯即可。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-15 wp-block-group-is-layout-flex">
<p>使用 partial 方法</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(1 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="partial void OnNameChanged(string? value)
{
    if (string.IsNullOrEmpty(value))
    {
        Phone = &quot;&quot;;
    }

    Console.WriteLine(value);
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">OnNameChanged</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">value</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        Phone </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>附上完整的程式碼。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-16 wp-block-group-is-layout-flex">
<p>MainWindowViewModel03</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class MainWindowViewModel03 : ObservableObject
{
    [ObservableProperty]
    [NotifyCanExecuteChangedFor(nameof(ShowInfoCommand))]
    private string? _name;

    [ObservableProperty]
    private string? _phone;

    partial void OnNameChanged(string? value)
    {
        if (string.IsNullOrEmpty(value))
        {
            Phone = &quot;&quot;;
        }

        Console.WriteLine(value);
    }

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    [RelayCommand(CanExecute = nameof(CanShowInfo))]
    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    [RelayCommand]
    private void ShowNote(string? str)
    {
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel03</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableObject</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyCanExecuteChangedFor</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">ShowInfoCommand</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">OnNameChanged</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">value</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            Phone </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<h2 class="wp-block-heading article_h2">使用異步Command</h2>



<p>CommunityToolkit.Mvvm 套件， Command 的部分，除了提供了 </p>



<ul>
<li>RelayCommand</li>



<li>RealyCommand&lt;T&gt;</li>
</ul>



<p>除此之外，如果有異步程式的需要，也有提供</p>



<ul>
<li>AsyncRelayCommand</li>



<li>AsyncRelayCommand&lt;T&gt; </li>
</ul>



<p>這兩種 Command 類別供使用。</p>



<p>而在使用上，可以像一般情況下那樣宣告 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">AsyncRelayCommand</mark> 並使用 new 來實例化。</p>



<p>個人還是推薦使用 Attribute ，如下面的程式碼所示，跟之前的程式碼基本相同，方法上方加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">[RelayCommand]</mark> 標註即可，而差別則是回傳型別，從 void 改成 async Task 。自動產生程式碼就會自動去變更並使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">AsyncRelayCommand</mark>  。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-17 wp-block-group-is-layout-flex">
<p>使用AsyncRelayCommand</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="[RelayCommand(CanExecute = nameof(CanShowInfo))]
private async Task ShowInfo()
{
    await Task.Delay(500);
    string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
    MessageBox.Show(info, &quot;MessageBox&quot;);
}

[RelayCommand]
private async Task ShowNote(string? str)
{
    await Task.Delay(500);
    string info = $&quot;Note: {str}&quot;;
    MessageBox.Show(info, &quot;MessageBox&quot;);
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">async</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Task</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">await</span><span style="color: #BABED8"> Task</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Delay</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">500</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">async</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Task</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">await</span><span style="color: #BABED8"> Task</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Delay</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">500</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>附上完整的程式碼。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-18 wp-block-group-is-layout-flex">
<p>MainWindowViewModel04</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class MainWindowViewModel04 : ObservableObject
{
    [ObservableProperty]
    [NotifyCanExecuteChangedFor(nameof(ShowInfoCommand))]
    private string? _name;

    [ObservableProperty]
    private string? _phone;

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    [RelayCommand(CanExecute = nameof(CanShowInfo))]
    private async Task ShowInfo()
    {
        await Task.Delay(500);
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    [RelayCommand]
    private async Task ShowNote(string? str)
    {
        await Task.Delay(500);
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel04</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableObject</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyCanExecuteChangedFor</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">ShowInfoCommand</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">async</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Task</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">await</span><span style="color: #BABED8"> Task</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Delay</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">500</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">async</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Task</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">await</span><span style="color: #BABED8"> Task</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Delay</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">500</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<h2 class="wp-block-heading article_h2">普通類別使用 Attribute</h2>



<p>當使用的類別已經繼承了其他父類別，但由於 C# 不支援多重繼承，因此無法直接繼承 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 來創建 ViewModel 類別，在這種情況下，該怎麼處理呢?</p>



<p>針對這樣的情況，套件中提供了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> Attribute。</p>



<p>如下面的程式碼所示，ViewModel 已經繼承了其他類別，此時將該類別宣告為 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">partial</mark> ，並且在類別上方加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">[ObservableObject]</mark> 標註，這樣該類別就等同於繼承了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 。</p>



<p>MainWindowViewModel05</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-19 wp-block-group-is-layout-flex">
<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="// 示範用父類別
public class SomeOtherClass
{
    protected string someString = &quot;Some string&quot;;
}

// 使用ObservableObject Attribute
[ObservableObject]
public partial class MainWindowViewModel05 : SomeOtherClass
{
    [ObservableProperty]
    [NotifyCanExecuteChangedFor(nameof(ShowInfoCommand))]
    private string? _name;

    [ObservableProperty]
    private string? _phone;

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    [RelayCommand(CanExecute = nameof(CanShowInfo))]
    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    [RelayCommand]
    private void ShowNote(string? str)
    {
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #464B5D; font-style: italic">// 示範用父類別</span></span>
<span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">SomeOtherClass</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">protected</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">someString</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Some string</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// 使用ObservableObject Attribute</span></span>
<span class="line"><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableObject</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel05</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">SomeOtherClass</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyCanExecuteChangedFor</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">ShowInfoCommand</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>至於怎麼做到的呢?</p>



<p>有興趣的話可以到自動產生的程式碼中看看，便能看到類別多繼承了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanged</mark> 和 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanging</mark> 這兩個 interface 外，也能看到實作了很多ViewModel需要用的方法，基本上與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 類別所繼承和實作的方法是一樣的。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/5UlJrML.png" alt="使用ObservableObject Attribute所自動產生的程式碼"/></figure>



<h2 class="wp-block-heading article_h2">總結</h2>



<p>以上便是關於 CommunityToolkit.Mvvm 套件的系列文章的Part 1，本次介紹了在 WPF 中使用該套件中的類別來實現 ViewModel ，取代了自己 <s>(網路複製來的)</s> 實現 ViewModel 所需的相關類別。</p>



<p>以及套件所提供的 Attribute 來減少 ViewModel 中的程式碼，像是</p>



<p>類別方面，</p>



<ul>
<li>[ObservableObject]</li>



<li>[INotifyPropertyChanged] (※未出現在文章範例中)</li>
</ul>



<p>Property 方面，</p>



<ul>
<li>[ObservableProperty]</li>



<li>[NotifyPropertyChangedFor] (※未出現在文章範例中)</li>



<li>[NotifyCanExecuteChangedFor]</li>
</ul>



<p>Command 方面，</p>



<ul>
<li>[RelayCommand] (※RelayCommand、RelayCommand&lt;T&gt;、AsyncRelayCommand、AsyncRelayCommand&lt;T&gt; 皆使用此 Attribute )</li>
</ul>



<p>當然還有其他的 Attribute ，這邊僅列出個人認為基礎且較常會用到的部分。</p>



<p>至於能夠實現數據驗證的 ViewModel 功能，將在Part 2中來講解與示範。</p>



<p>另外，雖然本篇文章是以 WPF 來做範例，而該套件也同樣適用在其他的 XAML 平台 <s>(應該吧，看到官網有 UWP 的範例，不過我沒用過)</s> 。</p>



<h2 class="wp-block-heading article_h2">自言自語543</h2>



<p>真沒想到有這樣的套件，以前在建立新的 WPF 專案或撰寫時，很常到別的專案中複製 ViewModelBase ，或是複製 Property 中使用相關方法的程式碼，總是想著，明明是 MVVM 99% 會用到的東西，為什麼一直沒有內建實作的類別可以直接用呢?</p>



<p>然後隨著 ViewModel 龐大起來，Property 和 Command 的程式越來越大串，雖然有 Region 可以收納起來，但是展開後&#8230;嗯&#8230;還是收起來吧&#8230;</p>



<p>結果居然在 Nuget 上，已經有套件的存在了 <s>(小丑竟是我自己!?)</s></p>



<p>不僅解決了，複製來複製去的程式碼，還把很多程式碼給變不見，有夠讚，有夠讚，有夠讚 <s>(因為很重要所以說三次)</s></p>



<p>未來就只會看到，舒服乾淨的 ViewModel 程式碼。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/2ks8bcm.png" alt=""/></figure>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
