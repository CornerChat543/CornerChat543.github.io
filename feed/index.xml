<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>CornerChat543</title>
	<atom:link href="https://cornerchat543.github.io/feed/" rel="self" type="application/rss+xml" />
	<link>https://cornerchat543.github.io</link>
	<description></description>
	<lastBuildDate>Mon, 20 May 2024 16:05:05 +0000</lastBuildDate>
	<language>zh-TW</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.3</generator>

<image>
	<url>https://cornerchat543.github.io/wp-content/uploads/2024/05/Logo_v2.jpg</url>
	<title>CornerChat543</title>
	<link>https://cornerchat543.github.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>使用ToolKit.MVVM實現ViewModel &#8211; Part 2</title>
		<link>https://cornerchat543.github.io/2024/05/toolkit-mvvm-part02/</link>
		
		<dc:creator><![CDATA[cornerchat543]]></dc:creator>
		<pubDate>Mon, 20 May 2024 16:05:02 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[.NET]]></category>
		<category><![CDATA[MVVM]]></category>
		<category><![CDATA[Nuget]]></category>
		<category><![CDATA[ToolKit.MVVM]]></category>
		<category><![CDATA[WPF]]></category>
		<guid isPermaLink="false">https://cornerchat543.github.io/?p=187</guid>

					<description><![CDATA[在軟體開發中，處理使用者輸入是一個常見的任務，同時也時常伴隨著數據驗證的需求。 在 WPF 或其他 Windo [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/6eIEfY5.png" alt=""/></figure>



<p>在軟體開發中，處理使用者輸入是一個常見的任務，同時也時常伴隨著數據驗證的需求。</p>



<p>在 WPF 或其他 Windows 平台的 MVVM 架構中，要完成數據驗證，可以選擇使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ValidationRule</mark>、<mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">IDataErrorInfo</mark> 和 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyDataErrorInfo</mark> 這幾個類別或接口。</p>



<p>其中 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">IDataErrorInfo</mark> 和 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyDataErrorInfo</mark> 的部分為 interface ，不僅要進行實作以外，因 MVVM 架構也需要一併實作 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanged</mark> 。而在 ViewModel 實作上，綁定的屬性也需要撰寫許多涉及 Property 的程式碼，使的開發的過程稍嫌繁瑣。</p>



<p>本篇的主題， CommunityToolkit.Mvvm 套件提供了實作 MVVM 架構時所需要的物件，其中的一個部分便是關於數據驗證，其中提供的物件，不只實作了<mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyDataErrorInfo</mark> 與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanged</mark> 等， MVVM 所需實現的interface外，同時也有提供方便的 Attribute 來簡化程式碼。</p>



<p>本次將進行該套件的數據驗證物件並使用 WPF 的示範。</p>



<p>本篇文章為 CommunityToolkit.Mvvm 套件系列的第二部分，若想了解關於該套件的基礎使用，可從前往下列網址前往。</p>



<p><a href="https://cornerchat543.github.io/2024/05/toolkit-mvvm-part01/" target="_blank" rel="noreferrer noopener">使用ToolKit.MVVM實現ViewModel – Part 1</a></p>



<p>本次的開發環境，如下</p>



<ul>
<li>IDE : Visual Studio 2022</li>



<li>.NET版本 : . NET 6.0</li>



<li>Nuget套件: CommunityToolkit.Mvvm 8.2.2</li>
</ul>



<hr class="wp-block-separator has-alpha-channel-opacity is-style-wide"/>



<h2 class="wp-block-heading article_h2">開始使用 ObservableValidator</h2>



<p>先從簡單的 View 開始，</p>



<p>View 的 XAML 部分如下，其中包含3個 TextBox 用於輸入資料 ， 分別綁定 Name、Phone 和 Email 屬性，以及一個綁定 ShowInfoCommand 的按鈕。</p>



<p>Phone 屬性的 TextBox 設定了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">Validation.ErrorTemplate</mark> ，當輸入的數值不符合設定的條件時，預期會在該 TextBox 的下方顯示紅色的錯誤訊息。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-1 wp-block-group-is-layout-flex">
<p>XAML</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">XML</span><span role="button" tabindex="0" data-code="&lt;Window.Resources&gt;
    &lt;Thickness x:Key=&quot;Margin.Top&quot;&gt;0,25,0,0&lt;/Thickness&gt;
&lt;/Window.Resources&gt;

&lt;Window.DataContext&gt;
    &lt;local:Window1ViewModelA/&gt;
&lt;/Window.DataContext&gt;

&lt;Grid&gt;

    &lt;StackPanel Margin=&quot;20&quot;&gt;

        &lt;!--Name--&gt;
        &lt;TextBlock Text=&quot;Name:&quot;/&gt;
        &lt;TextBox Text=&quot;{Binding Path=Name,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;

        &lt;!--Phone--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Phone:&quot;/&gt;
        &lt;TextBox Text=&quot;{Binding Path=Phone,
                                UpdateSourceTrigger=PropertyChanged}&quot;&gt;

            &lt;Validation.ErrorTemplate&gt;
                &lt;ControlTemplate&gt;
                    &lt;StackPanel&gt;
                        &lt;AdornedElementPlaceholder/&gt;
                        &lt;TextBlock Text=&quot;{Binding [0].ErrorContent}&quot;
                                   Foreground=&quot;Red&quot;/&gt;
                    &lt;/StackPanel&gt;
                &lt;/ControlTemplate&gt;
            &lt;/Validation.ErrorTemplate&gt;
            
        &lt;/TextBox&gt;

        &lt;!--Email--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Email:&quot;/&gt;
        &lt;TextBox Text=&quot;{Binding Path=Email,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;
        
        &lt;Button Margin=&quot;{StaticResource Margin.Top}&quot;
                Content=&quot;Show Info&quot;
                Command=&quot;{Binding Path=ShowInfoCommand}&quot;/&gt;

    &lt;/StackPanel&gt;

&lt;/Grid&gt;" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Window.Resources</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Thickness</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">x</span><span style="color: #89DDFF">:</span><span style="color: #C792EA">Key</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Margin.Top</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">0,25,0,0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Thickness</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Window.Resources</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Window.DataContext</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">local</span><span style="color: #89DDFF">:</span><span style="color: #F07178">Window1ViewModelA</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Window.DataContext</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Grid</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">20</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Name--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Name:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Name,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Phone--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Phone:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Phone,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Validation.ErrorTemplate</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">ControlTemplate</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">                    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">                        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">AdornedElementPlaceholder</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">                        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding [0].ErrorContent}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                                   </span><span style="color: #C792EA">Foreground</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Red</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">                    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">ControlTemplate</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Validation.ErrorTemplate</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">            </span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Email--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Email:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Email,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Show Info</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Command</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=ShowInfoCommand}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Grid</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div>
</div>



<p>ViewModel 需要使用的 namespace 如下所示，包含 ToolKit.Mvvm 以及 ValidationAttribute 的部分。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-2 wp-block-group-is-layout-flex">
<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(1 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using System.ComponentModel.DataAnnotations;" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> CommunityToolkit</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Mvvm</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">ComponentModel</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> CommunityToolkit</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Mvvm</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Input</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> System</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">ComponentModel</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">DataAnnotations</span><span style="color: #89DDFF">;</span></span></code></pre></div>
</div>



<p>再來則是 ViewModel Window1ViewModelA 的主要程式碼，</p>



<p>繼承部分，</p>



<ul>
<li>繼承套件內的 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 類別，該類別不僅繼承 MVVM 所使用的 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> ，還實作了數據驗證所需的 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyDataErrorInfo</mark> 介面。</li>
</ul>



<p>Property 部分，</p>



<ul>
<li>set 使用 SetProperty 方法來通知 View</li>



<li>Name 和 Phone 屬性上方，使用了 Required Attribute ，該 Attribute 用於數據驗證，作用是指是該屬性是必填的，不能為 null 或空字串。</li>
</ul>



<p>Command 部分，</p>



<ul>
<li>ShowInfo 方法執行時，首先呼叫 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ValidateAllProperties</mark> 方法驗證所有的屬性的數據，然後，使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">HasErrors</mark> 屬性，來確認是否有數據驗證未通過，並顯示內容為 HasErrors 的 MessageBox。若通過驗證的話，則顯示輸入的內容的 MessageBox。</li>
</ul>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-3 wp-block-group-is-layout-flex">
<p>Window1ViewModelA</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class Window1ViewModelA : ObservableValidator
{
    private string? _name;
    [Required]
    public string? Name
    {
        get =&gt; _name;
        set =&gt; SetProperty(ref _name, value);
    }

    private string? _phone;
    [Required]
    public string? Phone
    {
        get =&gt; _phone;
        set =&gt; SetProperty(ref _phone, value);
    }

    private string? _email;
    public string? Email
    {
        get =&gt; _email;
        set =&gt; SetProperty(ref _email, value);
    }

    public Window1ViewModelA()
    {

    }

    [RelayCommand]
    private void ShowInfo()
    {
        ValidateAllProperties();
        if (HasErrors)
        {
            MessageBox.Show(&quot;HasErrors&quot;, &quot;MessageBox&quot;);
            return;
        }

        string info = $&quot;Name: {Name}\nPhone: {Phone}\nEmail: {Email}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Window1ViewModelA</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableValidator</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Name</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Phone</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_email</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Email</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _email</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _email</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">Window1ViewModelA</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #82AAFF">ValidateAllProperties</span><span style="color: #89DDFF">();</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #BABED8">HasErrors</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">HasErrors</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Email: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Email</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>程式執行後，如下圖。</p>



<p>在沒有輸入資料的情況下，按下 ShowInfo 按鈕，便會彈出 MessageBox 並顯示 HasErrors 。</p>



<p>同時可以看到，設定了數據驗證 Attribute [Required] 的屬性，相關的 UI 有了變化，</p>



<ul>
<li>Name 的 TextBox 外圍多了紅框，這是因為數據驗證未通過時，TextBox 預設的 ErrorTemplate 是顯示紅框，以提示使用者出現了錯誤狀態。</li>



<li>Phone 的 TextBox 則與 Name 的不同，下方顯示了驗證錯誤的訊息，有這樣的差異是因為，該 TextBox 有設定了 ErrorTemplate 。</li>
</ul>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/Ocbfkjh.png" alt=""/></figure>



<p>透過上面的範例，已經初步學會如何使用套件中的 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 類別，並成功實現了以下功能：</p>



<ul>
<li>在必填欄位未填寫時，按下執行按鈕後，檢查並提示使用者數據驗證錯誤。</li>
</ul>



<h2 class="wp-block-heading article_h2">即時驗證數據</h2>



<p>那如果想要在輸入數據時，即時進行數據驗證，該如何實現呢?</p>



<p>其中一個方式是使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 內提供的 SetProperty 方法。如下面程式碼中，可以看到SetProperty 方法的最後一個參數 ( validate ) 帶入了 true ，這樣會在設定屬性值的同時，自動呼叫內部的驗證方法進行數據驗證。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-4 wp-block-group-is-layout-flex">
<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="private string? _name;
[Required]
public string? Name
{
    get =&gt; _name;
    set =&gt; SetProperty(ref _name, value, true);
}

private string? _phone;
[Required]
public string? Phone
{
    get =&gt; _phone;
    set =&gt; SetProperty(ref _phone, value, true);
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> Name</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> Phone</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>前往 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 類別中的 SetProperty 方法的內容，如下圖，程式首先執行， <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 的 SetProperty 方法，接著，如果屬性值有變動且 validate 參數為 true 時，將會執行 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ValidateProperty</mark> 的方法來驗證。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/YHpBnHq.png" alt=""/></figure>



<p>完整程式碼如下。除了在 SetProperty 方法中使用 validate 參數進行驗證，這個驗證只有在屬性的 set 方法被觸發時才會執行。為了在程式一開始時就進行一次驗證，下面程式的建構式裡使用了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ValidateAllProperties</mark> 方法，這樣就能在程式啟動後就先觸發數據驗證一次。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-5 wp-block-group-is-layout-flex">
<p>Window1ViewModelB</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class Window1ViewModelB : ObservableValidator
{
    private string? _name;
    [Required]
    public string? Name
    {
        get =&gt; _name;
        set =&gt; SetProperty(ref _name, value, true);
    }

    private string? _phone;
    [Required]
    public string? Phone
    {
        get =&gt; _phone;
        set =&gt; SetProperty(ref _phone, value, true);
    }

    private string? _email;
    public string? Email
    {
        get =&gt; _email;
        set =&gt; SetProperty(ref _email, value);
    }

    public Window1ViewModelB()
    {
        ValidateAllProperties();
    }

    [RelayCommand]
    private void ShowInfo()
    {
        if (HasErrors)
        {
            MessageBox.Show(&quot;HasErrors&quot;, &quot;MessageBox&quot;);
            return;
        }

        string info = $&quot;Name: {Name}\nPhone: {Phone}\nEmail: {Email}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Window1ViewModelB</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableValidator</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Name</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Phone</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_email</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Email</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _email</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _email</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">Window1ViewModelB</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #82AAFF">ValidateAllProperties</span><span style="color: #89DDFF">();</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #BABED8">HasErrors</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">HasErrors</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Email: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Email</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>替換過ViewModel後的結果如下，當 TextBox 從為空白狀態輸入資料後，錯誤提示便會立即消失，就像在網頁上填寫資料時的效果一樣。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/Bh5ABy7.png" alt=""/></figure>



<h2 class="wp-block-heading article_h2">使用 Attribute 簡化程式</h2>



<p>到了這個階段，已經能基本使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 類別，在 MVVM 架構中進行數據驗證。</p>



<p>那麼 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 類別，是否有像上篇文章中 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 類別那樣，能透過 Attribute 來減少程式碼嗎?</p>



<p>答案是可以的。</p>



<p>從一般的寫法，更改為使用套件提供的 Attribute ，變動如下圖所示。紅底部分為原先的一般寫法，綠底則為使用 Attribute 簡化程式後的結果。</p>



<ul>
<li>[ObservableProperty] ， 如前篇文章所提到的，套件會自動產生，使用 SetProperty 方法的 Property。</li>



<li>[NotifyDataErrorInfo]，此 Attribute 是在 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 中可使用的，等同於上一節中，將 validate 參數設為 true 的效果。</li>



<li>[Required]，用於屬性的數據驗證規則 (此為必填的規則)，這部分並不包含在 ToolKit.Mvvm 套件中。</li>
</ul>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-6 wp-block-group-is-layout-flex">
<p>紅底：標準使用</p>



<p>綠底：使用 Attribute</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-1"><img decoding="async" src="https://i.imgur.com/Bbk0UHf.png" alt="Property改使用ObservableProperty Attribute"/></figure>
</div>



<p>來詳細看一下 NotifyDataErrorInfo Attribute 的文件註解，如下圖。</p>



<p>文件中的解釋，當 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> 與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">NotifyDataErrorInfo</mark> Attribute 同時使用時，套件自動產生的對應程式碼。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/XzYdlGd.png" alt=""/></figure>



<p>那麼前進到自動產生的程式碼中，如下圖，實際上與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute 自動產生的程式，會是差在使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ValidateProperty</mark> 這個方法。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/DqgwuQy.png" alt=""/></figure>



<p>最後附上皆替換為 Attribute 的完整的程式碼。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-7 wp-block-group-is-layout-flex">
<p>Window1ViewModelC</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class Window1ViewModelC : ObservableValidator
{
    [ObservableProperty]
    [NotifyDataErrorInfo]
    [Required]
    private string? _name;

    [ObservableProperty]
    [NotifyDataErrorInfo]
    [Required]
    private string? _phone;

    [ObservableProperty]
    private string? _email;

    public Window1ViewModelC()
    {
        ValidateAllProperties();
    }

    [RelayCommand]
    private void ShowInfo()
    {
        if (HasErrors)
        {
            MessageBox.Show(&quot;HasErrors&quot;, &quot;MessageBox&quot;);
            return;
        }

        string info = $&quot;Name: {Name}\nPhone: {Phone}\nEmail: {Email}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Window1ViewModelC</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableValidator</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyDataErrorInfo</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyDataErrorInfo</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_email</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">Window1ViewModelC</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #82AAFF">ValidateAllProperties</span><span style="color: #89DDFF">();</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #BABED8">HasErrors</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">HasErrors</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Email: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Email</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<h2 class="wp-block-heading article_h2">使用其他的數據驗證 Attribute</h2>



<p>在數據驗證方面，.NET 還提供了其他可用的 Attribute。這些 Attribute 不屬於 ToolKit.Mvvm 套件，而是位於 <a href="https://learn.microsoft.com/zh-tw/dotnet/api/system.componentmodel.dataannotations" target="_blank" rel="noreferrer noopener">System.ComponentModel.DataAnnotations</a> 命名空間中。</p>



<p>那麼來試試將 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 搭配幾種不同的 Attribute 使用。</p>



<p>View 的 XAML 部分如下，</p>



<p>在 Window.Resources 中建立 TextBoxStyle ，該 Style 設定了 Validation.ErrorTemplate 屬性，視窗裡的4個 TextBox 皆套用此 Style。那 TextBox 分別綁定 Name、Number、Phone 和 Email 屬性。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-8 wp-block-group-is-layout-flex">
<p>XAML</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">XML</span><span role="button" tabindex="0" data-code="&lt;Window.Resources&gt;

    &lt;Thickness x:Key=&quot;Margin.Top&quot;&gt;0,25,0,0&lt;/Thickness&gt;

    &lt;Style x:Key=&quot;TextBoxStyle&quot; TargetType=&quot;TextBox&quot;&gt;

        &lt;Setter Property=&quot;Validation.ErrorTemplate&quot;&gt;
            &lt;Setter.Value&gt;
                &lt;ControlTemplate&gt;
                    &lt;StackPanel&gt;
                        &lt;AdornedElementPlaceholder/&gt;
                        &lt;TextBlock Text=&quot;{Binding [0].ErrorContent}&quot;
                                   Foreground=&quot;Red&quot;/&gt;
                    &lt;/StackPanel&gt;
                &lt;/ControlTemplate&gt;
            &lt;/Setter.Value&gt;
        &lt;/Setter&gt;

    &lt;/Style&gt;

&lt;/Window.Resources&gt;

&lt;Window.DataContext&gt;
    &lt;local:Window2ViewModelA/&gt;
&lt;/Window.DataContext&gt;

&lt;Grid&gt;

    &lt;StackPanel Margin=&quot;20&quot;&gt;

        &lt;!--Name--&gt;
        &lt;TextBlock Text=&quot;Name:&quot;/&gt;
        &lt;TextBox Style=&quot;{StaticResource TextBoxStyle}&quot;
                 Text=&quot;{Binding Path=Name,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;

        &lt;!--Number--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Number:&quot;/&gt;
        &lt;TextBox Style=&quot;{StaticResource TextBoxStyle}&quot;
                 Text=&quot;{Binding Path=Number,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;

        &lt;!--Phone--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Phone:&quot;/&gt;
        &lt;TextBox Style=&quot;{StaticResource TextBoxStyle}&quot;
                 Text=&quot;{Binding Path=Phone,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;

        &lt;!--Email--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Email:&quot;/&gt;
        &lt;TextBox Style=&quot;{StaticResource TextBoxStyle}&quot;
                 Text=&quot;{Binding Path=Email,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;
        
        &lt;Button Margin=&quot;{StaticResource Margin.Top}&quot;
                Content=&quot;Show Info&quot;
                Command=&quot;{Binding Path=ShowInfoCommand}&quot;/&gt;

    &lt;/StackPanel&gt;

&lt;/Grid&gt;" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Window.Resources</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Thickness</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">x</span><span style="color: #89DDFF">:</span><span style="color: #C792EA">Key</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Margin.Top</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">0,25,0,0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Thickness</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Style</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">x</span><span style="color: #89DDFF">:</span><span style="color: #C792EA">Key</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">TextBoxStyle</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">TargetType</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">TextBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Setter</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Property</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Validation.ErrorTemplate</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Setter.Value</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">ControlTemplate</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">                    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">                        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">AdornedElementPlaceholder</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">                        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding [0].ErrorContent}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                                   </span><span style="color: #C792EA">Foreground</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Red</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">                    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">ControlTemplate</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Setter.Value</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Setter</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Style</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Window.Resources</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Window.DataContext</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">local</span><span style="color: #89DDFF">:</span><span style="color: #F07178">Window2ViewModelA</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Window.DataContext</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Grid</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">20</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Name--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Name:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource TextBoxStyle}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                 </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Name,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Number--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Number:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource TextBoxStyle}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                 </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Number,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Phone--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Phone:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource TextBoxStyle}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                 </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Phone,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Email--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Email:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource TextBoxStyle}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                 </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Email,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Show Info</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Command</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=ShowInfoCommand}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Grid</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div>
</div>



<p>View的樣子，如下圖。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/QpU96hB.png" alt=""/></figure>



<p>以下是 ViewModel 的程式碼，4 個變數除了使用 [Required] 進行數據驗證外，還各自搭配了不同的 Attribute。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-9 wp-block-group-is-layout-flex">
<p>Window2ViewModelA</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class Window2ViewModelA : ObservableValidator
{
    [ObservableProperty]
    [NotifyDataErrorInfo]
    [Required]
    [MinLength(4)]
    [MaxLength(10)]
    private string? _name;

    [ObservableProperty]
    [NotifyDataErrorInfo]
    [Required]
    [Range(0, 100)]
    private string? _number;

    [ObservableProperty]
    [NotifyDataErrorInfo]
    [Required]
    [Phone]
    private string? _phone;

    [ObservableProperty]
    [NotifyDataErrorInfo]
    [Required]
    [EmailAddress]
    private string? _email;

    public Window2ViewModelA()
    {
        ValidateAllProperties();
    }

    [RelayCommand]
    private void ShowInfo()
    {
        if (HasErrors)
        {
            MessageBox.Show(&quot;HasErrors&quot;, &quot;MessageBox&quot;);
            return;
        }

        string info = $&quot;Name: {Name}\nNumber: {Number}\nPhone: {Phone}\nEmail: {Email}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Window2ViewModelA</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableValidator</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyDataErrorInfo</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">MinLength</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">4</span><span style="color: #89DDFF">)]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">MaxLength</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">)]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyDataErrorInfo</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Range</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">)]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_number</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyDataErrorInfo</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Phone</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyDataErrorInfo</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">Required</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">EmailAddress</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_email</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">Window2ViewModelA</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #82AAFF">ValidateAllProperties</span><span style="color: #89DDFF">();</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #BABED8">HasErrors</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">HasErrors</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Number: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Number</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Email: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Email</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>以下是各種 Attribute在實際執行程式時的效果：</p>



<ul>
<li>Name 變數使用了 MinLength 和 MaxLength Attribute，將數據的長度限制在最小長度和最大長度之間。</li>
</ul>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/UvFDBDu.png" alt=""/></figure>



<ul>
<li>Number 變數使用了 Range Attribute， 將數據的數值限制在設定的範圍內。</li>
</ul>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/1ilulpY.png" alt=""/></figure>



<ul>
<li>Phone 變數使用了 Phone Attribute，將會檢查數據的內容是否符合電話格式。</li>
</ul>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/Rw82DfG.png" alt=""/></figure>



<ul>
<li>Email 變數使用了 EmailAddress Attribute，將會檢查數據的內容是否符合電子信箱格式。</li>
</ul>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/qVZvBuG.png" alt=""/></figure>



<h2 class="wp-block-heading article_h2">總結</h2>



<p>在 MVVM 架構中實現數據驗證時，使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">CommunityToolkit.Mvvm</mark> 套件中的 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 類別是一個不錯的選擇。它可以節省大量時間和功夫，並且可以配合套件內的 Attribute 自動生成程式碼，使程式碼更為精簡，從而讓開發者能更專注於主要的邏輯。</p>



<p>需要注意的是，由於 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 實作了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyDataErrorInfo</mark> 介面，因此在 View 上綁定的屬性，在數據驗證後，無論是否通過驗證，數據都會更新到 ViewModel 的屬性中。因此，開發者需要確保在適當的時機觸發數據驗證方法，並且在出現驗證錯誤時，確保程式邏輯能夠阻止執行下一步驟，讓程式正確運作。</p>



<p>而如果希望在 View 層就攔截錯誤數據，使其不進入 ViewModel，那麼實作並使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ValidationRule</mark> 會比較符合這種情況。</p>



<p>另外，本篇的重點著重在 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 類別上，因此未深入探討數據驗證 Attribute。除了本文中介紹的現成屬性外，數據驗證屬性還有一些其他的功能和實作方法，例如：</p>



<ul>
<li>在驗證錯誤時，使用 ErrorMessage 顯示自訂的錯誤訊息</li>



<li>使用 CustomValidation Attribute 自訂驗證規則</li>



<li>繼承 ValidationAttribute 類別來自訂驗證類別</li>
</ul>



<p>以上這些內容在網路上已有許多文章介紹。如果有機會，未來會再撰寫一篇番外篇，結合 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableValidator</mark> 類別，進一步探討這些數據驗證屬性的使用方法。</p>



<h2 class="wp-block-heading article_h2">自言自語543</h2>



<p>在撰寫 MVVM 架構時，個人還沒做過太多資料驗證的需求，唯一的幾次經驗則是使用 IDataErrorInfo 並配合較傳統的寫法來實現。</p>



<p>自從使用 CommunityToolkit.Mvvm 套件後，發現了 ObservableValidator 的存在，於是花了些時間了解怎麼使用，說不定未來有機會需要用到。學習的過程中，這才發現原來有數據驗證用的 Attribute ，不但讓程式達成需要的功能、能重複使用以外，還能讓程式碼更精簡，真的是很神奇的東西。</p>



<p>過去，個人在使用 Attribute ，通常是在配合 Winform 的 PropertyGrid 元件時，會在類別的 Property 上添加一些用於在 PropertyGrid 上使用的設定。如今套件中有自動產生程式碼的 Attribute 外，還有數據驗證用的，看來還有很多需要學習的地方呢…</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>使用ToolKit.MVVM實現ViewModel &#8211; Part 1</title>
		<link>https://cornerchat543.github.io/2024/05/toolkit-mvvm-part01/</link>
		
		<dc:creator><![CDATA[cornerchat543]]></dc:creator>
		<pubDate>Sun, 05 May 2024 06:54:39 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[.NET]]></category>
		<category><![CDATA[MVVM]]></category>
		<category><![CDATA[Nuget]]></category>
		<category><![CDATA[ToolKit.MVVM]]></category>
		<category><![CDATA[WPF]]></category>
		<guid isPermaLink="false">https://cornerchat543.github.io/?p=154</guid>

					<description><![CDATA[在WPF開發中(或其他Windows框架)，若要實現MVVM架構的話，通常需要實作 INotifyProper [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/dNjQeay.png" alt="CommunityToolKit.Mvvm文章封面圖"/></figure>



<p>在WPF開發中(或其他Windows框架)，若要實現MVVM架構的話，通常需要實作 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.4))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanged</mark>、<mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.4))" class="has-inline-color has-palette-color-8-color">ICommand</mark>，這兩個 interface 。自己先前的習慣是，從網路上找其他人寫好的實作，複製到自己的專案中使用，且每開一次新專案，就複製一份。</p>



<p>某天如往常地尋找資料時，發現了微軟在 Nuget 上的 CommunityToolkit.Mvvm 套件(也稱為MVVM工具包)。該套件不但實作了MVVM所需要的物件，還提供一些好用的 Attribute ，讓程式碼可以更精簡，從而讓開發人員更專注在重要的程式邏輯中。</p>



<p>關於 CommunityToolkit.Mvvm 套件使用方法，預計拆分成幾篇不同主題的文章，而本次將記錄，在未使用此套件之前的做法，接著套件的安裝方法、基本使用，以及如何使用其提供的 Attribute 功能。</p>



<p>開發環境，如下</p>



<ul>
<li>IDE : Visual Studio 2022</li>



<li>.NET版本 : . NET 6.0</li>
</ul>



<hr class="wp-block-separator has-alpha-channel-opacity is-style-wide"/>



<h2 class="wp-block-heading article_h2">以往的開發狀況</h2>



<p>有比較才有傷害，首先回顧尚未使用套件前，以往撰寫所用的類別與狀況。</p>



<p>View 的 XAML 部分如下，本篇文章的範例，View 都是用同一個，後面則是根據 ViewModel 的不同，替換 DataContext 中的 ViewModel 即可。</p>



<p>此 View 分為兩個部分，</p>



<p>第一部分為兩個 TextBox 搭配一個 Button 組成，預計按下 Button 後顯示 MessageBox。</p>



<p>第二部分為一個 TextBox 配上一個 Button ，不同之處在於預計點擊 Button 後，會傳送 CommandParameter，再顯示 MessageBox。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-10 wp-block-group-is-layout-flex">
<p>XAML</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">XML</span><span role="button" tabindex="0" data-code="&lt;Window.Resources&gt;
    &lt;Thickness x:Key=&quot;Margin.Top&quot;&gt;0,10,0,0&lt;/Thickness&gt;
&lt;/Window.Resources&gt;

&lt;Window.DataContext&gt;
    &lt;local:MainWindowViewModel/&gt;
&lt;/Window.DataContext&gt;

&lt;Grid&gt;

    &lt;StackPanel Margin=&quot;20&quot;&gt;

        &lt;!--Name--&gt;
        &lt;TextBlock Text=&quot;Name:&quot;/&gt;
        &lt;TextBox Text=&quot;{Binding Path=Name,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;

        &lt;!--Phone--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Phone:&quot;/&gt;
        &lt;TextBox Text=&quot;{Binding Path=Phone,
                                UpdateSourceTrigger=PropertyChanged}&quot;/&gt;

        &lt;Button Margin=&quot;{StaticResource Margin.Top}&quot;
                Content=&quot;Show Info&quot;
                Command=&quot;{Binding Path=ShowInfoCommand}&quot;/&gt;

        &lt;!--Note--&gt;
        &lt;TextBlock Margin=&quot;{StaticResource Margin.Top}&quot;
                   Text=&quot;Note:&quot;/&gt;
        &lt;TextBox x:Name=&quot;tbNote&quot;/&gt;

        &lt;Button Margin=&quot;{StaticResource Margin.Top}&quot;
                Content=&quot;Show Note&quot;
                Command=&quot;{Binding Path=ShowNoteCommand}&quot;
                CommandParameter=&quot;{Binding ElementName=tbNote, Path=Text}&quot;/&gt;

    &lt;/StackPanel&gt;

&lt;/Grid&gt;" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Window.Resources</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Thickness</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">x</span><span style="color: #89DDFF">:</span><span style="color: #C792EA">Key</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Margin.Top</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">0,10,0,0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Thickness</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Window.Resources</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Window.DataContext</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">local</span><span style="color: #89DDFF">:</span><span style="color: #F07178">MainWindowViewModel</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Window.DataContext</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Grid</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">20</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Name--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Name:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Name,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Phone--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Phone:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=Phone,</span></span>
<span class="line"><span style="color: #C3E88D">                                UpdateSourceTrigger=PropertyChanged}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Show Info</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Command</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=ShowInfoCommand}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #464B5D; font-style: italic">&lt;!--Note--&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBlock</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                   </span><span style="color: #C792EA">Text</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Note:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">TextBox</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">x</span><span style="color: #89DDFF">:</span><span style="color: #C792EA">Name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tbNote</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">Button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">Margin</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{StaticResource Margin.Top}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Show Note</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">Command</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding Path=ShowNoteCommand}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">                </span><span style="color: #C792EA">CommandParameter</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">{Binding ElementName=tbNote, Path=Text}</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">StackPanel</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">Grid</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div>
</div>



<p>View 執行起來，如下圖。</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-11 wp-block-group-is-layout-flex">
<p>View</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-2"><img decoding="async" src="https://i.imgur.com/OInGGRD.png" alt="範例View執行結果"/></figure>
</div>



<p><mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.4))" class="has-inline-color has-palette-color-8-color"> INotifyPropertyChanged</mark> 的實作 ViewModelBase 程式碼如下。</p>



<p>每個人的實作與使用上多少有點不同<s>(廢話)</s>，這邊則是網路上找到的某個版本。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-12 wp-block-group-is-layout-flex">
<p>ViewModelBase</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace BindingLibrary
{
    public abstract class ViewModelBase : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler? PropertyChanged;

        protected virtual void OnPropertyChanged(string? propertyName)
        {
            PropertyChanged?.Invoke(
                this, new PropertyChangedEventArgs(propertyName));
        }

        protected bool SetProperty&lt;T&gt;(
            ref T field,
            T value,
            [CallerMemberName] string? propertyName = null)
        {
            if (EqualityComparer&lt;T&gt;.Default.Equals(field, value))
            {
                return false;
            }

            field = value;
            OnPropertyChanged(propertyName);

            return true;
        }
    }
}
" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> System</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">ComponentModel</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> System</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Runtime</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">CompilerServices</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">namespace</span><span style="color: #BABED8"> BindingLibrary</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">abstract</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ViewModelBase</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">INotifyPropertyChanged</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">event</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">PropertyChangedEventHandler</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">PropertyChanged</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">protected</span><span style="color: #BABED8"> </span><span style="color: #C792EA">virtual</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">OnPropertyChanged</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">propertyName</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            PropertyChanged</span><span style="color: #89DDFF">?.</span><span style="color: #82AAFF">Invoke</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF">this,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">PropertyChangedEventArgs</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">propertyName</span><span style="color: #89DDFF">));</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">protected</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">T</span><span style="color: #89DDFF">&gt;(</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">T</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">field</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #FFCB6B">T</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">CallerMemberName</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">propertyName</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">null)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #BABED8">EqualityComparer</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">T</span><span style="color: #89DDFF">&gt;.</span><span style="color: #BABED8">Default</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Equals</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">field</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">            field </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #82AAFF">OnPropertyChanged</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">propertyName</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre></div>
</div>



<p>再來是 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.4))" class="has-inline-color has-palette-color-8-color">ICommand</mark> 的實作 RelayCommand 程式碼如下。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-13 wp-block-group-is-layout-flex">
<p>RelayCommand</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="using System.Windows.Input;

namespace BindingLibrary
{
    public class RelayCommand : ICommand
    {
        private readonly Action&lt;object?&gt; _execute;
        private readonly Predicate&lt;object?&gt;? _canExecute;

        public RelayCommand
            (Action&lt;object?&gt; execute,
            Predicate&lt;object?&gt;? canExecute = null)
        {
            _execute = execute ?? 
                throw new ArgumentNullException(nameof(execute));
            _canExecute = canExecute;
        }

        public event EventHandler? CanExecuteChanged;

        public bool CanExecute(object? parameter)
        {
            return _canExecute == null
                || _canExecute(parameter);
        }

        public void Execute(object? parameter)
        {
            _execute(parameter);
        }

        public void RaiseCanExecuteChanged()
        {
            CanExecuteChanged?.Invoke(this, EventArgs.Empty);
        }
    }
}
" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> System</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Windows</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Input</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">namespace</span><span style="color: #BABED8"> BindingLibrary</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">readonly</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Action</span><span style="color: #89DDFF">&lt;object?&gt;</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_execute</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">readonly</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Predicate</span><span style="color: #89DDFF">&lt;object?&gt;?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_canExecute</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> RelayCommand</span></span>
<span class="line"><span style="color: #BABED8">            (</span><span style="color: #FFCB6B">Action</span><span style="color: #89DDFF">&lt;object?&gt;</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">execute</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #FFCB6B">Predicate</span><span style="color: #BABED8">&lt;</span><span style="color: #FFCB6B">object</span><span style="color: #BABED8">?&gt;? </span><span style="color: #FFCB6B">canExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">null</span><span style="color: #BABED8">)</span></span>
<span class="line"><span style="color: #BABED8">        {</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #FFCB6B">_execute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> execute </span><span style="color: #89DDFF">??</span><span style="color: #BABED8"> </span></span>
<span class="line"><span style="color: #BABED8">                </span><span style="color: #89DDFF; font-style: italic">throw</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ArgumentNullException</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">execute</span><span style="color: #89DDFF">));</span></span>
<span class="line"><span style="color: #BABED8">            _canExecute </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> canExecute</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> event EventHandler? CanExecuteChanged</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> bool CanExecute(object? parameter)</span></span>
<span class="line"><span style="color: #BABED8">        {</span></span>
<span class="line"><span style="color: #BABED8">            return _canExecute == null</span></span>
<span class="line"><span style="color: #BABED8">                || _canExecute(parameter)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">Execute</span><span style="color: #89DDFF">(object?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">parameter</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #82AAFF">_execute</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">parameter</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">RaiseCanExecuteChanged</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            CanExecuteChanged</span><span style="color: #89DDFF">?.</span><span style="color: #82AAFF">Invoke</span><span style="color: #89DDFF">(this,</span><span style="color: #BABED8"> EventArgs</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Empty</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #BABED8">    }</span></span>
<span class="line"><span style="color: #BABED8">}</span></span>
<span class="line"></span></code></pre></div>
</div>



<p>最後是 ViewModel 的程式碼 MainWindowViewModel。</p>



<p>繼承部分，</p>



<ul>
<li>此類別繼承 ViewModelBase。</li>
</ul>



<p>Property 部分，</p>



<ul>
<li>Name，set 時使用 SetProperty 方法外，還會呼叫 RaiseCanExecuteChanged 進行對應的 CanExecute 方法。</li>



<li>Phone，單純使用 SetProperty 方法。</li>
</ul>



<p>Command 部分，</p>



<ul>
<li>ShowInfoCommand，CanExecute 部分呼叫 CanShowInfo() ，檢查 _name 變數是否為 null 或 empty ；Execute 部分呼叫 ShowInfo() ，將 Name 與 Phone 的內容顯示在 MessageBox 中。</li>



<li>ShowNoteCommand，Execute 部分呼叫 ShowNote(object? obj) ，將 View 傳進來的物件，傳成字串並顯示在 MessageBox 中。</li>
</ul>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-14 wp-block-group-is-layout-flex">
<p>MainWindowViewModel</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public class MainWindowViewModel : ViewModelBase
{
    private string? _name;
    public string? Name
    {
        get =&gt; _name;
        set
        {
            SetProperty(ref _name, value);
            ShowInfoCommand.RaiseCanExecuteChanged();
        }
    }

    private string? _phone;
    public string? Phone
    {
        get =&gt; _phone;
        set =&gt; SetProperty(ref _phone, value);
    }

    private RelayCommand? _showInfoCommand;
    public RelayCommand ShowInfoCommand
        =&gt; _showInfoCommand ??= new RelayCommand(
            _ =&gt; ShowInfo(), _ =&gt; CanShowInfo());

    private ICommand? _showNoteCommand;
    public ICommand ShowNoteCommand
        =&gt; _showNoteCommand ??= new RelayCommand(ShowNote);

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    private void ShowNote(object? obj)
    {
        string? str = (string?)obj;
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ViewModelBase</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Name</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">            ShowInfoCommand</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">RaiseCanExecuteChanged</span><span style="color: #89DDFF">();</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Phone</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_showInfoCommand</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ShowInfoCommand</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _showInfoCommand </span><span style="color: #89DDFF">??=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #FFCB6B">_</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">(),</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_showNoteCommand</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ShowNoteCommand</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _showNoteCommand </span><span style="color: #89DDFF">??=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">ShowNote</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(object?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">obj</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?)</span><span style="color: #BABED8">obj</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>整體程式執行結果，如下，</p>



<p>在輸入 Name 前，Show Info 按鈕為 Disable 狀態，輸入文字後則變為 Enable 狀態，按下 Show Info 按鈕後，出現 MessageBox 並顯示所 Binding 的內容。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-15 wp-block-group-is-layout-flex">
<p>執行結果1</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-3"><img decoding="async" src="https://i.imgur.com/z1SbLGL.jpeg" alt="範例程式執行結果1"/></figure>
</div>



<p>輸入 Note 後，按下 Show Note 按鈕，View 會將內容文字經由 CommandParameter 傳到 ViewModel 中，最後由 MessageBox 顯示其內容。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-16 wp-block-group-is-layout-flex">
<p>執行結果2</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-4"><img decoding="async" src="https://i.imgur.com/ic2pyqS.png" alt="範例程式執行結果2"/></figure>
</div>



<p>到這裡，示範了如何在 View 與 ViewModel DataBinding 時，實作基礎介面與使用方式，相信有寫過C# MVVM架構的人，是會感到很熟悉的。</p>



<p>那麼，接下來將會把上面的範例程式，改成使用套件的情況。</p>



<h2 class="wp-block-heading article_h2">開始使用ToolKit.MVVM</h2>



<p>開始使用前，需要進行套件的安裝。</p>



<p>打開專案後，在該專案下找到&#8221;相依性&#8221;，並在該項目上按右鍵，選擇選單中的 &#8220;管理NuGet套件&#8221; ，切換到&#8221;瀏覽&#8221;的頁籤中，在搜尋框中輸入 &#8220;ToolKit.Mvvm&#8221;。</p>



<p>在搜尋結果列表中，選擇 &#8220;CommunityToolkit.Mvvm&#8221; 進行安裝。</p>



<p>另外列表中會看到 Microsoft.Toolkit.Mvvm 的套件，該套件是較早期的版本而 CommunityToolkit.Mvvm 則是其最新的版本。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-17 wp-block-group-is-layout-flex">
<p>Nuget 搜尋結果</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-5"><img decoding="async" src="https://i.imgur.com/lqeaStK.jpeg" alt="Nuget搜尋CommunityToolKit.Mvvm套件的搜尋結果"/></figure>
</div>



<p>套件安裝完成後，接下來使用套件內的類別來完成 ViewModel，這邊我建立新的 ViewModel，並且將前一個 ViewModel 複製過來做程式碼的修改。</p>



<p>using 下面這兩個 Namespace，當然也可以輸入對應的類別，在IDE上設定引用。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-18 wp-block-group-is-layout-flex">
<p>Namespace部分</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(1 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> CommunityToolkit</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Mvvm</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">ComponentModel</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F78C6C">using</span><span style="color: #BABED8"> CommunityToolkit</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Mvvm</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">Input</span><span style="color: #89DDFF">;</span></span></code></pre></div>
</div>



<p>ViewModel 的程式碼如下，來說明有修改的地方</p>



<p>繼承部分，</p>



<ul>
<li>繼承 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark>，該類別實作了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanged</mark> 和  <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanging</mark>。</li>
</ul>



<p>Property 部分，</p>



<ul>
<li>基本上是一模一樣，唯一不同的地方是，Name 屬性的 set 方法中，原本呼叫 CanExecute 方法，在該套件下方法名是 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">NotifyCanExecuteChanged()</mark>。</li>
</ul>



<p>Command 部分，</p>



<ul>
<li>Command 在使用上，也是差不多的，類別也是叫 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand</mark> </li>



<li>套件內有分 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand</mark> 與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand&lt;T&gt;</mark> ，以前自己用的是 RelayCommand 算是兩種的混合，固定參數都是 object 型態，不使用時用 lamda 捨棄，要使用時從 object 來轉型，那既然套件內有做區分，使用對應的類別即可。</li>
</ul>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-19 wp-block-group-is-layout-flex">
<p>MainWindowViewModel01</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public class MainWindowViewModel01 : ObservableObject
{
    private string? _name;
    public string? Name
    {
        get =&gt; _name;
        set
        {
            SetProperty(ref _name, value);
            ShowInfoCommand.NotifyCanExecuteChanged();
        }
    }

    private string? _phone;
    public string? Phone
    {
        get =&gt; _phone;
        set =&gt; SetProperty(ref _phone, value);
    }

    private RelayCommand? _showInfoCommand;
    public RelayCommand ShowInfoCommand
        =&gt; _showInfoCommand ??= new RelayCommand(ShowInfo, CanShowInfo);

    private ICommand? _showNoteCommand;
    public ICommand ShowNoteCommand
        =&gt; _showNoteCommand ??= new RelayCommand&lt;string&gt;(ShowNote);

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    private void ShowNote(string? str)
    {
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel01</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableObject</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Name</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _name</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">            ShowInfoCommand</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">NotifyCanExecuteChanged</span><span style="color: #89DDFF">();</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Phone</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">get</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #FFCB6B">set</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">SetProperty</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ref</span><span style="color: #BABED8"> _phone</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_showInfoCommand</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ShowInfoCommand</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _showInfoCommand </span><span style="color: #89DDFF">??=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">ShowInfo</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> CanShowInfo</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_showNoteCommand</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ICommand</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ShowNoteCommand</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">=&gt;</span><span style="color: #BABED8"> _showNoteCommand </span><span style="color: #89DDFF">??=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">&lt;</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">&gt;(</span><span style="color: #BABED8">ShowNote</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>替換成套件中的類別，程式碼不要說87%像，根本一模一樣啊?</p>



<p>這樣有什麼特別的嗎?</p>



<p>ToolKit.Mvvm 還提供的一些 Attribute 供使用，接下來看看此部分。</p>



<p><s>那麼，接下來就來看看，讓程式碼變短的魔法!</s></p>



<h2 class="wp-block-heading article_h2">使用套件提供的Attribute</h2>



<p>ViewModel 全部改用 Attribute 後的程式碼如下。</p>



<p>程式碼少將近一半，留下最主要的邏輯部分，並且還完全等同於上一段的程式碼，接下來將逐步解析程式碼，以便更好地理解其邏輯並正確的使用。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-20 wp-block-group-is-layout-flex">
<p>MainWindowViewModel02</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class MainWindowViewModel02 : ObservableObject
{
    [ObservableProperty]
    [NotifyCanExecuteChangedFor(nameof(ShowInfoCommand))]
    private string? _name;

    [ObservableProperty]
    private string? _phone;

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    [RelayCommand(CanExecute = nameof(CanShowInfo))]
    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    [RelayCommand]
    private void ShowNote(string? str)
    {
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel02</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableObject</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyCanExecuteChangedFor</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">ShowInfoCommand</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>首先，要使用此套件的 Attribute 時，除了要繼承 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 以外，類別前面還需要加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">partial</mark> 關鍵字，這樣加上對應的 Attribute 時，對應的程式碼便會自動產生。忘記加 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">partial</mark> 關鍵字，使用了 Attrubute 也沒關係，IDE會提示的。</p>



<p>※補充：partial 這個關鍵字允許開發者將一個類別、結構、介面或方法的定義分散在兩個或更多的程式碼檔案中。</p>



<p>不過有個先決條件，專案的C#版本需要是C# 8.0以上，才能使用此套件的 Attribute 功能。如果版本不到，IDE便會提示 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">MVVMTK0008</mark> 的錯誤提示。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/truQ3mN.jpeg" alt="類別加入partial關鍵字"/></figure>



<p>再來是 Attribute 的使用。</p>



<p>在撰寫 ViewModel 時，通常會需要綁定一些變數。在大多數情況下，會先撰寫私有變數，然後再寫相應的屬性。這些屬性不僅用於讀寫私有變數，還需要包含通知 View 變動的方法，如下圖中紅底部分。</p>



<p>然而，如果使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute，只需要在私有變數上方加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">[ObservableProperty]</mark> 標註，就完成綁定屬性的撰寫，無需額外撰寫紅底部分的程式碼，如下圖中綠底部分所示。</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-21 wp-block-group-is-layout-flex">
<p>紅底：標準使用</p>



<p>綠底：使用 Attribute</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-6"><img decoding="async" src="https://i.imgur.com/85bHAPG.jpeg" alt="Property改使用ObservableProperty Attribute"/></figure>
</div>



<p>那麼為什麼加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute 就能達成這個效果呢?</p>



<p>此部分可參考文件註解的詳細說明，如下圖。</p>



<p>大致的意思是，在需要的變數前加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute 後，便會自動產生出公開屬性，包含 set 方法中使用 SetProperty。</p>



<p>而屬性的命名，則會自動根據使用的變數名稱來命名，支援小寫、底線、小m開頭。例如變數名稱為 phone、_phone、m_phone 時，自動產生的屬性則會叫做 Phone。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/tUL375f.jpeg" alt="ObservableProperty Attribute使用原理"/></figure>



<p>如果想看自動產生的程式碼，該怎麼做呢?</p>



<p>其中一個方式為，在撰寫的 ViewModel 上，右鍵 &gt; 移至定義 (或按F12)。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/3nvVh2R.jpeg" alt="前往類別定義"/></figure>



<p>如下圖，IDE會顯示所有定義該 ViewModel 的檔案，以圖中的狀況，前三個檔案都是自動產生的，這邊點選第一個檔案。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/5sZDHZE.jpeg" alt="類別宣告列表"/></figure>



<p>進入到該檔案後，如下圖，IDE會提示該檔案為自動產生的。</p>



<p>在內容中便可找到對應的 Property，同時能看到set方法中，還使用很多的方法，至於怎麼使用，後面的章節會在做說明。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/hTdTeTX.jpeg" alt="套件自動產生的Property程式碼"/></figure>



<p>如果在屬性中需要使用 CanExecute 通知方法，除了使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> 的同時，還需要加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">NotifyCanExecuteChangedFor</mark> Attribute。</p>



<p>如下圖所示，紅底的區域的程式碼可以用綠底的兩個 Attribute 取代，並且將要執行通知的 Command 填入 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">NotifyCanExecuteChangedFor</mark> Attribute 的參數中。</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-22 wp-block-group-is-layout-flex">
<p>紅底：標準使用</p>



<p>綠底：使用 Attribute</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-7"><img decoding="async" src="https://i.imgur.com/4PI6R5u.png" alt="Property使用NotifyCanExecuteChangedFor Attribute"/></figure>
</div>



<p>除了 Property 可以使用 Attribute 外，Command 也有方便的 Attribute 可以使用。</p>



<p>使用方法也很簡單，只需要在 Command 呼叫時要執行的方法上面，加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">[RelayCommand]</mark> 標註即可，如下圖，紅底的區域的程式碼，由兩個綠底的中的Attribute取代。</p>



<p>若要使用 CanExecute 方法，則在 RelayCommand 的 Attribute 中設定 CanExecute 的參數指定要使用的方法。</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-23 wp-block-group-is-layout-flex">
<p>紅底：標準使用</p>



<p>綠底：使用 Attribute</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-8"><img decoding="async" src="https://i.imgur.com/mU2ILuw.png" alt="使用RelayCommand Attribute"/></figure>
</div>



<p>套件內雖然有分 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand</mark> 與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand&lt;T&gt;</mark> 兩種類別，不過 Attribute 都是使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">RelayCommand</mark>，自動產生程式碼會根據方法的定義，自動使用對應的類別。</p>



<p>至於自動產生的 Command 命名規則，通常會是方法名加上 &#8220;Command&#8221; 。例如，在範例程式中 ShowInfo 方法上使用，自動產生的 Command 就會命名為 ShowInfoCommand。</p>



<p>上述的詳細資訊，可至自動產生的程式碼檔案中看到，如下圖所示。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/EETmWLX.png" alt="自動產生的RelayCommand程式碼"/></figure>



<p>以上便是範例程式替換成套件內提供的 Attribute 的情況。該範例基本上涵蓋了寫 ViewModel 時較常用到的程式碼。</p>



<p>接下來，將進一步延伸使用 Attribute 的範例，來探索套件內其他功能。</p>



<h2 class="wp-block-heading article_h2">屬性變更時的額外處理</h2>



<p>當ViewModel程式中使用了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableProperty</mark> Attribute ，但同時又想在Property的set過程中執行一些額外的操作時，該怎麼辦呢?</p>



<p>這時候，可以試著使用自動產生的 partial 方法來處理看看。</p>



<p>當進入到自動產生的 Property 程式碼中，在 set 方法中可以看到中間會有以該屬性名的 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">OnXxxChanging()</mark> 、 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">OnXxxChanged()</mark> 方法。如下圖，像是 Name 屬性便有 OnNameChaging() 、OnNameChaged()，而 Phone 屬性則是有 OnPhoneChaging() 、OnPhoneChaged() 。</p>



<p>那這些方法是怎麼定義的呢?</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/cp3htR8.png" alt="自動產生的Property程式碼"/></figure>



<p>在自動產生的程式碼部分繼續往下拉，可以看到方法的定義。</p>



<p>這些 Changing 、 Changed 方法，都是宣告為 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">partial</mark> ，這樣只要挑選需要的方法，並在 ViewModel 中實作即可。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/TGEAe4M.png" alt="自動產生的partial方法定義"/></figure>



<p>例如，把下面的 partial void OnNameChanged 程式，寫到 ViewMode l中。</p>



<p>這段程式，會在 _name = value 之後，檢查value是否為空，如果是的話，就把 Phone 屬性設為空字串。</p>



<p>基本上，在自動產生的程式碼中確認方法呼叫的時機，並將要實現的方法定義複製到 ViewModel 中，再撰寫需要的程式邏輯即可。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-24 wp-block-group-is-layout-flex">
<p>使用 partial 方法</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(1 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="partial void OnNameChanged(string? value)
{
    if (string.IsNullOrEmpty(value))
    {
        Phone = &quot;&quot;;
    }

    Console.WriteLine(value);
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">OnNameChanged</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">value</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        Phone </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>附上完整的程式碼。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-25 wp-block-group-is-layout-flex">
<p>MainWindowViewModel03</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class MainWindowViewModel03 : ObservableObject
{
    [ObservableProperty]
    [NotifyCanExecuteChangedFor(nameof(ShowInfoCommand))]
    private string? _name;

    [ObservableProperty]
    private string? _phone;

    partial void OnNameChanged(string? value)
    {
        if (string.IsNullOrEmpty(value))
        {
            Phone = &quot;&quot;;
        }

        Console.WriteLine(value);
    }

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    [RelayCommand(CanExecute = nameof(CanShowInfo))]
    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    [RelayCommand]
    private void ShowNote(string? str)
    {
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel03</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableObject</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyCanExecuteChangedFor</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">ShowInfoCommand</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">OnNameChanged</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">value</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">            Phone </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">        Console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">WriteLine</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">value</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<h2 class="wp-block-heading article_h2">使用異步Command</h2>



<p>CommunityToolkit.Mvvm 套件， Command 的部分，除了提供了 </p>



<ul>
<li>RelayCommand</li>



<li>RealyCommand&lt;T&gt;</li>
</ul>



<p>除此之外，如果有異步程式的需要，也有提供</p>



<ul>
<li>AsyncRelayCommand</li>



<li>AsyncRelayCommand&lt;T&gt; </li>
</ul>



<p>這兩種 Command 類別供使用。</p>



<p>而在使用上，可以像一般情況下那樣宣告 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">AsyncRelayCommand</mark> 並使用 new 來實例化。</p>



<p>個人還是推薦使用 Attribute ，如下面的程式碼所示，跟之前的程式碼基本相同，方法上方加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">[RelayCommand]</mark> 標註即可，而差別則是回傳型別，從 void 改成 async Task 。自動產生程式碼就會自動去變更並使用 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">AsyncRelayCommand</mark>  。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-26 wp-block-group-is-layout-flex">
<p>使用AsyncRelayCommand</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="[RelayCommand(CanExecute = nameof(CanShowInfo))]
private async Task ShowInfo()
{
    await Task.Delay(500);
    string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
    MessageBox.Show(info, &quot;MessageBox&quot;);
}

[RelayCommand]
private async Task ShowNote(string? str)
{
    await Task.Delay(500);
    string info = $&quot;Note: {str}&quot;;
    MessageBox.Show(info, &quot;MessageBox&quot;);
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">async</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Task</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">await</span><span style="color: #BABED8"> Task</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Delay</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">500</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">async</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Task</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">await</span><span style="color: #BABED8"> Task</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Delay</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">500</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">    MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>附上完整的程式碼。</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-27 wp-block-group-is-layout-flex">
<p>MainWindowViewModel04</p>



<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="public partial class MainWindowViewModel04 : ObservableObject
{
    [ObservableProperty]
    [NotifyCanExecuteChangedFor(nameof(ShowInfoCommand))]
    private string? _name;

    [ObservableProperty]
    private string? _phone;

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    [RelayCommand(CanExecute = nameof(CanShowInfo))]
    private async Task ShowInfo()
    {
        await Task.Delay(500);
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    [RelayCommand]
    private async Task ShowNote(string? str)
    {
        await Task.Delay(500);
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel04</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">ObservableObject</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyCanExecuteChangedFor</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">ShowInfoCommand</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">async</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Task</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">await</span><span style="color: #BABED8"> Task</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Delay</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">500</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #C792EA">async</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">Task</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">await</span><span style="color: #BABED8"> Task</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Delay</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">500</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<h2 class="wp-block-heading article_h2">普通類別使用 Attribute</h2>



<p>當使用的類別已經繼承了其他父類別，但由於 C# 不支援多重繼承，因此無法直接繼承 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 來創建 ViewModel 類別，在這種情況下，該怎麼處理呢?</p>



<p>針對這樣的情況，套件中提供了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> Attribute。</p>



<p>如下面的程式碼所示，ViewModel 已經繼承了其他類別，此時將該類別宣告為 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">partial</mark> ，並且在類別上方加上 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">[ObservableObject]</mark> 標註，這樣該類別就等同於繼承了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 。</p>



<p>MainWindowViewModel05</p>



<div class="wp-block-group is-vertical is-content-justification-stretch is-layout-flex wp-container-core-group-is-layout-28 wp-block-group-is-layout-flex">
<div class="wp-block-kevinbatdorf-code-block-pro cbp-has-line-numbers" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;--cbp-line-number-color:#babed8;--cbp-line-number-width:calc(2 * 0.6 * .875rem);line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#181c2a;color:#aaafcf">C#</span><span role="button" tabindex="0" data-code="// 示範用父類別
public class SomeOtherClass
{
    protected string someString = &quot;Some string&quot;;
}

// 使用ObservableObject Attribute
[ObservableObject]
public partial class MainWindowViewModel05 : SomeOtherClass
{
    [ObservableProperty]
    [NotifyCanExecuteChangedFor(nameof(ShowInfoCommand))]
    private string? _name;

    [ObservableProperty]
    private string? _phone;

    private bool CanShowInfo()
    {
        return !string.IsNullOrEmpty(_name);
    }

    [RelayCommand(CanExecute = nameof(CanShowInfo))]
    private void ShowInfo()
    {
        string info = $&quot;Name: {Name}\nPhone: {Phone}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }

    [RelayCommand]
    private void ShowNote(string? str)
    {
        string info = $&quot;Note: {str}&quot;;
        MessageBox.Show(info, &quot;MessageBox&quot;);
    }
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #464B5D; font-style: italic">// 示範用父類別</span></span>
<span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">SomeOtherClass</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">protected</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">someString</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Some string</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// 使用ObservableObject Attribute</span></span>
<span class="line"><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableObject</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #C792EA">partial</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">MainWindowViewModel05</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">SomeOtherClass</span></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">NotifyCanExecuteChangedFor</span><span style="color: #89DDFF">(nameof(</span><span style="color: #BABED8">ShowInfoCommand</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_name</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">ObservableProperty</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">_phone</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">bool</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CanShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IsNullOrEmpty</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">_name</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">CanExecute</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">nameof(</span><span style="color: #BABED8">CanShowInfo</span><span style="color: #89DDFF">))]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowInfo</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Name: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Name</span><span style="color: #89DDFF">}</span><span style="color: #BABED8">\n</span><span style="color: #C3E88D">Phone: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">Phone</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">[</span><span style="color: #FFCB6B">RelayCommand</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">private</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">void</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">ShowNote</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">string</span><span style="color: #89DDFF">?</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">string</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">info</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$&quot;</span><span style="color: #C3E88D">Note: </span><span style="color: #89DDFF">{</span><span style="color: #BABED8">str</span><span style="color: #89DDFF">}&quot;</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #BABED8">        MessageBox</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Show</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">info</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">MessageBox</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</div>



<p>至於怎麼做到的呢?</p>



<p>有興趣的話可以到自動產生的程式碼中看看，便能看到類別多繼承了 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanged</mark> 和 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">INotifyPropertyChanging</mark> 這兩個 interface 外，也能看到實作了很多ViewModel需要用的方法，基本上與 <mark style="background-color:var(--theme-palette-color-9, rgba(255, 255, 255, 0.2))" class="has-inline-color has-palette-color-8-color">ObservableObject</mark> 類別所繼承和實作的方法是一樣的。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/5UlJrML.png" alt="使用ObservableObject Attribute所自動產生的程式碼"/></figure>



<h2 class="wp-block-heading article_h2">總結</h2>



<p>以上便是關於 CommunityToolkit.Mvvm 套件的系列文章的Part 1，本次介紹了在 WPF 中使用該套件中的類別來實現 ViewModel ，取代了自己 <s>(網路複製來的)</s> 實現 ViewModel 所需的相關類別。</p>



<p>以及套件所提供的 Attribute 來減少 ViewModel 中的程式碼，像是</p>



<p>類別方面，</p>



<ul>
<li>[ObservableObject]</li>



<li>[INotifyPropertyChanged] (※未出現在文章範例中)</li>
</ul>



<p>Property 方面，</p>



<ul>
<li>[ObservableProperty]</li>



<li>[NotifyPropertyChangedFor] (※未出現在文章範例中)</li>



<li>[NotifyCanExecuteChangedFor]</li>
</ul>



<p>Command 方面，</p>



<ul>
<li>[RelayCommand] (※RelayCommand、RelayCommand&lt;T&gt;、AsyncRelayCommand、AsyncRelayCommand&lt;T&gt; 皆使用此 Attribute )</li>
</ul>



<p>當然還有其他的 Attribute ，這邊僅列出個人認為基礎且較常會用到的部分。</p>



<p>至於能夠實現數據驗證的 ViewModel 功能，將在Part 2中來講解與示範。</p>



<p>另外，雖然本篇文章是以 WPF 來做範例，而該套件也同樣適用在其他的 XAML 平台 <s>(應該吧，看到官網有 UWP 的範例，不過我沒用過)</s> 。</p>



<h2 class="wp-block-heading article_h2">自言自語543</h2>



<p>真沒想到有這樣的套件，以前在建立新的 WPF 專案或撰寫時，很常到別的專案中複製 ViewModelBase ，或是複製 Property 中使用相關方法的程式碼，總是想著，明明是 MVVM 99% 會用到的東西，為什麼一直沒有內建實作的類別可以直接用呢?</p>



<p>然後隨著 ViewModel 龐大起來，Property 和 Command 的程式越來越大串，雖然有 Region 可以收納起來，但是展開後&#8230;嗯&#8230;還是收起來吧&#8230;</p>



<p>結果居然在 Nuget 上，已經有套件的存在了 <s>(小丑竟是我自己!?)</s></p>



<p>不僅解決了，複製來複製去的程式碼，還把很多程式碼給變不見，有夠讚，有夠讚，有夠讚 <s>(因為很重要所以說三次)</s></p>



<p>未來就只會看到，舒服乾淨的 ViewModel 程式碼。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/2ks8bcm.png" alt=""/></figure>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>使用WordPress建立GitHub Pages</title>
		<link>https://cornerchat543.github.io/2024/04/wordpress-on-github-pages/</link>
		
		<dc:creator><![CDATA[cornerchat543]]></dc:creator>
		<pubDate>Sun, 07 Apr 2024 08:10:22 +0000</pubDate>
				<category><![CDATA[Github Pages]]></category>
		<category><![CDATA[github pages]]></category>
		<category><![CDATA[github.io]]></category>
		<category><![CDATA[WordPress]]></category>
		<category><![CDATA[XAMPP]]></category>
		<guid isPermaLink="false">https://cornerchat543.github.io/?p=63</guid>

					<description><![CDATA[撰寫程式時，經常在網路上查詢 (複製) 程式，感謝願意在網路上分享的前輩們。也常想著哪天，也能放放自己的 爛  [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/dWtDbbf.jpg" alt=""/></figure>



<p>撰寫程式時，經常在網路上查詢 <s>(複製)</s> 程式，感謝願意在網路上分享的前輩們。也常想著哪天，也能放放自己的 <s>爛</s> 程式，不僅可以備忘一下，也能供人參考 <s>供未來的自己複製</s> 。</p>



<p>雖然說，有想做這件事情，不過也想 n 年了 <s>懶人一枚</s>，大概去年時，有一些空閒開始慢慢著手找尋資料。</p>



<p>對一些現成的部落格網站，進行了研究或嘗試，功能感覺有點陽春且能自訂的項目不多，或是需要撰寫程式來實現，要做到我想要的感覺，工量感覺也有點多。</p>



<p>若是要完全自己來，還需要找伺服器管理後台等等，暫時還不想搞得這麼龐大。</p>



<p>在搜尋資料的過程中，發現在 Github 上有 Github Pages ( github.io ) ，可以做為搭建網站的平台，可以用 Markdown 、 HTML 或其他格式。另外，也了解到 WordPress 是一個備受歡迎的自架網站平台，這也勾起了好奇心。因此，現階段最後決定使用 WordPress 加上 Github Pages 來建立 Blog。</p>



<p>本篇文章，放上自己建立的過程步驟。</p>



<p>使用到的軟體、網站如下：</p>



<ul>
<li>GitHub 網站</li>



<li>GitHub Desktop</li>



<li>XAMPP</li>



<li>WordPress</li>



<li>網頁瀏覽器</li>
</ul>



<hr class="wp-block-separator has-alpha-channel-opacity is-style-wide"/>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading article_h2">GitHub Pages 建立與設定</h2>



<p>以下步驟為假設已經有 Github 網站的帳號並且登入後，可開始進行，</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-29 wp-block-group-is-layout-flex">
<p>1-1.選擇習慣的方式，建立新的 Repository ，這邊登入後於網頁左側建立</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-9"><img decoding="async" src="https://i.imgur.com/2oztusI.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-30 wp-block-group-is-layout-flex">
<p>1-2.點擊開始建立後，首先輸入 Repository name ，這邊輸入「帳號名稱.github.io」。再來視個人需求勾選 Add a README file ，建議可勾選，這樣在還沒 push 與部署其他東西前，進入主站會顯示 README 的內容。最後點選 &#8220;Create Repository&#8221; 建立。</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer wp-container-content-10"></div>



<p>補充， Repository name 也能輸入其他名稱，差別在於建立出來的網站，網址會有些差異。在 GitHub 上創建一個名為「帳號名稱.github.io」的 Repository 時，沒有特別設定的情況下，前面加上「https://」就會是您的主站點。若是其他名稱，主站點則會是「https://帳號名稱.github.io/Repository name」 <s>( 應該吧 )</s></p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-11"><img decoding="async" src="https://i.imgur.com/5aXzof8.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-31 wp-block-group-is-layout-flex">
<p>1-3.建立完成後，會長得像這樣</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-12"><img decoding="async" src="https://i.imgur.com/rJd5RTP.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-32 wp-block-group-is-layout-flex">
<p>1-4.建立名為「gh-pages」的分支，點選main分支標籤，輸入「gh-pages」後，按下下方的 &#8220;Create branch gh-pages from main&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-13"><img decoding="async" src="https://i.imgur.com/P6cZ2WO.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-33 wp-block-group-is-layout-flex">
<p>1-5. gh-pages 分支建立完後的樣子</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-14"><img decoding="async" src="https://i.imgur.com/iMzeCQt.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-34 wp-block-group-is-layout-flex">
<p>1-6.點選上方標籤列的Settings標籤，進入 Repository 的設定頁面，在 Default branch 區塊中來切換預設的分支</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-15"><img decoding="async" src="https://i.imgur.com/03eBfON.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-35 wp-block-group-is-layout-flex">
<p>1-7.預設的分支，從原本的 main 改為剛建立的 gh-pages 分支後，按下 &#8220;Update&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-16"><img decoding="async" src="https://i.imgur.com/3QXksBU.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-36 wp-block-group-is-layout-flex">
<p>1-8.按下 &#8220;I understand&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-17"><img decoding="async" src="https://i.imgur.com/NUS8m7K.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-37 wp-block-group-is-layout-flex">
<p>1-9.選擇左邊選單中的 Pages 頁籤，找到 Build and deployment 中的 Branch 項目，點選 main 分支</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-18"><img decoding="async" src="https://i.imgur.com/v7wsCKM.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-38 wp-block-group-is-layout-flex">
<p>1-10.從 main 分支改為 gh-pages 分支，並且按下 &#8220;Save&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-19"><img decoding="async" src="https://i.imgur.com/fOjOLY5.jpg" alt=""/></figure>
</div>



<p>到上面步驟，基本上已經設定完畢，<br>以下為額外的設置，可以忽略，<br>此設置為讓 github 顯示出網站的連結，<br>避免自行所想的網址，與實際的網址有出入的情況 <s>絕對不是懶得記網址</s> ，</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-39 wp-block-group-is-layout-flex">
<p>額外1-1. 首先在 Repository 的 Code 頁籤中，點選 About 右邊的設定圖示按鈕</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-20"><img decoding="async" src="https://i.imgur.com/ZUDIrX0.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-40 wp-block-group-is-layout-flex">
<p>額外1-2. 會出現下面的小視窗，可以看到有一個 Website 的欄位</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-21"><img decoding="async" src="https://i.imgur.com/2eFsEVw.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-41 wp-block-group-is-layout-flex">
<p>額外1-3. 勾選該欄位下方的 &#8220;Use your GitHub Pages website&#8221; 選項後， Website 的欄位便會自動產生並填入主站點的網址，最後按下 &#8220;Save changes&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-22"><img decoding="async" src="https://i.imgur.com/VPHo1JM.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-42 wp-block-group-is-layout-flex">
<p>額外1-4. 儲存成功後，右邊的 About 便會顯示主站點的超連結，點進去後就能看到所建立的網站</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-23"><img decoding="async" src="https://i.imgur.com/xbyRSN1.jpg" alt=""/></figure>
</div>



<h2 class="wp-block-heading article_h2">WordPress 建立與設定</h2>



<p>接下來目標是，在本機電腦上建立環境，安裝並使用 WordPress</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-43 wp-block-group-is-layout-flex">
<p>2-1. 依照電腦系統與喜好下載 <a href="https://www.apachefriends.org/zh_tw/download.html" target="_blank" rel="noreferrer noopener">XAMPP</a> 軟體，這邊下載 Windows x64 免安裝版本</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-24"><img decoding="async" src="https://i.imgur.com/yIi7Mkb.jpg" alt=""/></figure>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/A6ZsFlF.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-44 wp-block-group-is-layout-flex">
<p>2-2. 下載 <a href="https://tw.wordpress.org/download/" target="_blank" rel="noreferrer noopener">WordPress</a> ，這邊下載的檔案為 zip 壓縮檔</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-25"><img decoding="async" src="https://i.imgur.com/ivxFbTt.jpg" alt=""/></figure>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/D60cziL.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-45 wp-block-group-is-layout-flex">
<p>2-3. 將 XAMPP 解壓縮</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-26"><img decoding="async" src="https://i.imgur.com/gjFF2LS.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-46 wp-block-group-is-layout-flex">
<p>2-4. 執行 &#8220;setup_xampp&#8221; 批次檔</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-27"><img decoding="async" src="https://i.imgur.com/2StYGOF.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-47 wp-block-group-is-layout-flex">
<p>2-5. 依照指示並等待批次檔執行完成</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-28"><img decoding="async" src="https://i.imgur.com/QfFvmK3.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-48 wp-block-group-is-layout-flex">
<p>2-6. 在 XAMPP 中尋找 &#8220;htdocs&#8221; 的資料夾。進入 &#8220;htdocs&#8221; 資料夾中，建立一個資料夾，這邊我建立了一個 cornerchat543 的資料夾，再來把前面步驟中下載的 WordPress 壓縮檔，解壓縮到該資料夾中</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-29"><img decoding="async" src="https://i.imgur.com/jvHKYO4.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-49 wp-block-group-is-layout-flex">
<p>2-7. 回到XAMPP資料夾中，點選 &#8220;xampp-control&#8221; 來啟動程式。程式啟動後點選 &#8220;Apache&#8221; 和 &#8220;MySQL&#8221; 右邊的 Start 按鈕。若出現防火牆的訊息，則按下允許。</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-30"><img decoding="async" src="https://i.imgur.com/cGRAdlS.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-50 wp-block-group-is-layout-flex">
<p>2-8. 皆正常運作的話，畫面會與下面相同</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-31"><img decoding="async" src="https://i.imgur.com/CAFfwh2.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-51 wp-block-group-is-layout-flex">
<p>2-9. 開啟網頁瀏覽器程式，輸入「http://localhost/phpmyadmin/」來進入MySQL 數據庫的網頁介面</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-32"><img decoding="async" src="https://i.imgur.com/dN2TE2Y.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-52 wp-block-group-is-layout-flex">
<p>2-10. 建立新的資料庫，點選左邊選單中的&#8221;新增&#8221;，在中間輸入欲新增的資料庫名稱，輸入完畢後按下右邊的&#8221;建立&#8221;按鈕</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-33"><img decoding="async" src="https://i.imgur.com/1WsxFL3.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-53 wp-block-group-is-layout-flex">
<p>2-11. 新增成功的話，可從左邊選單中，看到該資料庫在列表中。接著安裝 WordPress ，在瀏覽器中輸入「http://localhost/{資料夾名稱}/」，資料夾名稱為步驟2-6，也就是在 htdocs 資料夾中，自行建立的資料夾名稱</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-34"><img decoding="async" src="https://i.imgur.com/bAdEThi.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-54 wp-block-group-is-layout-flex">
<p>2-12. 進入後便可看到此畫面，點選下方&#8221;開始安裝&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-35"><img decoding="async" src="https://i.imgur.com/3iHBppn.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-55 wp-block-group-is-layout-flex">
<p>2-13. 接著輸入步驟2-10所建立的資料庫名稱，以及資料庫預設的帳號 root 與空密碼(不用輸入)，完成後按下&#8221;傳送&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-36"><img decoding="async" src="https://i.imgur.com/kIM7Yey.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-56 wp-block-group-is-layout-flex">
<p>2-14. 按下&#8221;執行安裝程式&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-37"><img decoding="async" src="https://i.imgur.com/aMo50U1.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-57 wp-block-group-is-layout-flex">
<p>2-15. 根據表單填入對應的資訊，使用者名稱與密碼是未來要進入後台管理時需要的。填寫完畢後按下 &#8220;安裝WordPress&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-38"><img decoding="async" src="https://i.imgur.com/79yrwr0.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-58 wp-block-group-is-layout-flex">
<p>2-16. 等待之後，安裝完成畫面如下圖，再來便可點選&#8221;登入&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-39"><img decoding="async" src="https://i.imgur.com/sM0nyc8.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-59 wp-block-group-is-layout-flex">
<p>2-17. 輸入步驟2-15所輸入的使用者與密碼來進行登入</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-40"><img decoding="async" src="https://i.imgur.com/FiaSc15.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-60 wp-block-group-is-layout-flex">
<p>2-18. 登入成功後，便會進入到網站的控制台管理畫面。未來要直接進入控制台，則在瀏覽器輸入「http://localhost/{資料夾名稱}/wp-admin/」，資料夾名稱為建立於 htdocs 下的。</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/81p3vYe.jpeg" alt=""/></figure>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-41"><img decoding="async" src="https://i.imgur.com/TNKC4yH.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-61 wp-block-group-is-layout-flex">
<p>2-19. 若要前往前台網站，點選控制台左上角的房子 icon 即可</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-42"><img decoding="async" src="https://i.imgur.com/DjzKKA1.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-62 wp-block-group-is-layout-flex">
<p>2-20. 進入到前台，目前為預設的佈景主題與內容。若要回到控制台頁面，則點選左上角的速度表 icon</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-43"><img decoding="async" src="https://i.imgur.com/Fgwc891.jpg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-63 wp-block-group-is-layout-flex">
<p>2-21. 若要變更預設的佈景主題，則在左方點選&#8221;外觀&#8221; > &#8220;佈景主題&#8221;，可以選擇或安裝新的主題。未來本網站會使用 Blocksy 主題</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-44"><img decoding="async" src="https://i.imgur.com/h6bGxvq.jpg" alt=""/></figure>
</div>



<h2 class="wp-block-heading article_h2">部屬靜態網站到 Github</h2>



<p>Github 倉儲和 WordPress 網站建立好之後，再來要將網站部署到 Github 上，因 Github pages 需使用靜態網站，因此接下來會將網站轉為靜態網站，然後進行部署</p>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-64 wp-block-group-is-layout-flex">
<p>3-1. 首先將先前所建好的 Repository Clone 到本機端吧。選擇自己習慣的 Github 工具，這邊用的是 Github Desktop</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-45"><img decoding="async" src="https://i.imgur.com/zZ4Rcdf.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-65 wp-block-group-is-layout-flex">
<p>3-2. 選擇要 Clone 使用的 Repository ，再來設定要存放在本機的路徑後，按下 &#8220;Clone&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-46"><img decoding="async" src="https://i.imgur.com/Q1kDlUX.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-66 wp-block-group-is-layout-flex">
<p>3-3. 接下來安裝產生靜態網站的外掛，回到控制台頁面，在左側選單中點選&#8221;外掛&#8221; &gt; &#8220;已安裝外掛&#8221;，在點選上方的&#8221;安裝外掛&#8221;，或是左側選單直接點選&#8221;外掛&#8221; &gt; &#8220;安裝外掛&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-47"><img decoding="async" src="https://i.imgur.com/mXCEU2b.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-67 wp-block-group-is-layout-flex">
<p>3-4. 在安裝外掛的頁面，到右邊搜尋欄中輸入 &#8220;Simply Static&#8221; ，並且在下方找到該外掛後，進行安裝與啟用</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-48"><img decoding="async" src="https://i.imgur.com/uFVAS4h.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-68 wp-block-group-is-layout-flex">
<p>3-5. Simply Static 外掛啟用後，可看到左側選單中，出現了 Simply Static 的選項</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-49"><img decoding="async" src="https://i.imgur.com/imTZnAP.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-69 wp-block-group-is-layout-flex">
<p>3-6. 產生靜態網站前，要做些設定，點選左側 &#8220;Simply Static&#8221; 後，尋找並點選 &#8220;General&#8221; ，右側的 REPLACING URLS 選項選擇 &#8220;Absolute URLs&#8221; ，並在下方 SCHEME 選擇 &#8220;https://&/#8221; ， HOST 則填入去除 https:// 後，自己的 github pages 網址，完成後到網頁底端按下 &#8220;Save Settings&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-50"><img decoding="async" src="https://i.imgur.com/yJz0m1I.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-70 wp-block-group-is-layout-flex">
<p>3-7. 在 Simply Static 頁面中，尋找並點選 &#8220;Deploy&#8221;，將右邊的 DEPLOYMENT METHOD 選擇 &#8220;Local Directory&#8221; ，接著在 Local Directory 區塊中的 PATH 欄位裡，填入步驟3-2， Clone 下來的 Repository 本機路徑，完成後到網頁底端按下 &#8220;Save Settings&#8221;</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-51"><img decoding="async" src="https://i.imgur.com/gDMQYc3.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-71 wp-block-group-is-layout-flex">
<p>3-8. 上述設定結束後，點選 &#8220;Generate Static Files&#8221; 便會在設定的資料夾中，產生靜態網站的檔案，可點選 &#8220;Activity Log&#8221; ，在右側觀看產生過程的 Log 資訊，並等待執行完成</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-52"><img decoding="async" src="https://i.imgur.com/IW6ExCJ.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-72 wp-block-group-is-layout-flex">
<p>3-9. 完成後，在 Github 工具中，可看到多了許多檔案，再來執行 Commit 並 Push 到 Github 上</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-53"><img decoding="async" src="https://i.imgur.com/BwCSzst.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-73 wp-block-group-is-layout-flex">
<p>3-10. 回到 Repository 網頁中，可看到 Push 上來的樣子， Push 上來後，就會開始執行佈署，到佈署完成可能需要等待一下</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-54"><img decoding="async" src="https://i.imgur.com/FAKL24O.jpeg" alt=""/></figure>
</div>



<div class="wp-block-group is-vertical is-content-justification-left is-layout-flex wp-container-core-group-is-layout-74 wp-block-group-is-layout-flex">
<p>3-11. 最後輸入自己的 Github pages 網址，便可看到成果</p>



<figure class="wp-block-image size-large is-style-default wp-duotone-unset-55"><img decoding="async" src="https://i.imgur.com/28tKsih.jpeg" alt=""/></figure>
</div>



<h2 class="wp-block-heading article_h2">自言自語543</h2>



<p>終於把 Github Pages 建立起來了，原本想先記錄其他方面的文章，不過回顧建立的過程，有點繁雜，若未來要再架一次，恐怕早就忘光光了，趁著記憶尚未消失前，把步驟和過程記錄下來</p>



<p>原本知道 Github pages 後，考慮要用 Markdown 還是寫 HTML 來建立，不過感覺工程浩大，大概很快就&#8230;&#8230;</p>



<p>不過還好有 WordPress 可以使用，在幾乎不用寫 code 的情況下，就能完成一個網站，省去了不少功夫與時間</p>



<p>於是乎，此篇為本站的第一篇文章，似乎篇幅好像有點長，網站和文章的格式，也還沒完全想好決定好，日後的新文章，會再慢慢做調整&#8230;</p>



<p>應該會繼續寫新文章&#8230;吧?</p>



<figure class="wp-block-image size-large"><img decoding="async" src="https://i.imgur.com/s6EfEE6.png" alt=""/></figure>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
